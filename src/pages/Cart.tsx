import { useState, useEffect } from 'react';
import { useNavigate } from 'react-router-dom';
import { Button } from '@/components/ui/button';
import { Trash2, ShoppingBag, ArrowLeft, CheckCircle, Package, CreditCard, Shield, Zap, MessageCircle } from 'lucide-react';
import { useCart } from '@/hooks/useCart';
import { useAuth } from '@/hooks/useAuth';
import { useLanguage } from '@/hooks/useLanguage';
import { useOrders } from '@/hooks/useOrders';

const Cart = () => {
  const navigate = useNavigate();
  const { items, removeItem, clear, updateQuantity } = useCart();
  const { telegramUser, balance, refreshBalance } = useAuth();
  const { t } = useLanguage();
  const { createOrder, isProcessing } = useOrders();
  const [showSuccessModal, setShowSuccessModal] = useState(false);
  const [orderId, setOrderId] = useState<string>('');

  // –û—Ç–ª–∞–¥–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è –º–æ–¥–∞–ª–∞
  console.log('Cart render - showSuccessModal:', showSuccessModal, 'orderId:', orderId);

  // –û—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è –º–æ–¥–∞–ª–∞
  useEffect(() => {
    console.log('useEffect - showSuccessModal –∏–∑–º–µ–Ω–∏–ª—Å—è:', showSuccessModal);
  }, [showSuccessModal]);

  useEffect(() => {
    console.log('useEffect - orderId –∏–∑–º–µ–Ω–∏–ª—Å—è:', orderId);
  }, [orderId]);

  const total = items.reduce((sum, item) => sum + (item.price * item.quantity), 0);

  const handleCheckout = async () => {
    if (!telegramUser) {
      alert('–í–æ–π–¥–∏—Ç–µ —á–µ—Ä–µ–∑ Telegram –¥–ª—è –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞');
      return;
    }

    if (balance < total) {
      alert('–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –¥–ª—è –ø–æ–∫—É–ø–∫–∏');
      return;
    }

    try {
      const result = await createOrder(items, total);
      
      if (result.success && result.orderId) {
        console.log('–ó–∞–∫–∞–∑ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω:', result.orderId);
        console.log('–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º orderId:', result.orderId);
        setOrderId(result.orderId);
        console.log('–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º showSuccessModal –≤ true');
        setShowSuccessModal(true);
        console.log('–û—á–∏—â–∞–µ–º –∫–æ—Ä–∑–∏–Ω—É');
        clear(); // –û—á–∏—â–∞–µ–º –∫–æ—Ä–∑–∏–Ω—É
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –±–∞–ª–∞–Ω—Å —Å—Ä–∞–∑—É
        console.log('–û–±–Ω–æ–≤–ª—è–µ–º –±–∞–ª–∞–Ω—Å');
        refreshBalance();
        
        console.log('–°–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ—Å–ª–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è:', { orderId: result.orderId, showSuccessModal: true });
      } else {
        console.error('–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–∫–∞–∑–∞:', result.error);
        alert(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–∏ –∑–∞–∫–∞–∑–∞: ${result.error}`);
      }
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–∏ –∑–∞–∫–∞–∑–∞:', error);
      alert('–ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–∏ –∑–∞–∫–∞–∑–∞');
    }
  };

  const handleRemoveItem = (itemId: string) => {
    removeItem(itemId);
    alert('–¢–æ–≤–∞—Ä —É–¥–∞–ª–µ–Ω –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã');
  };

  const handleClearCart = () => {
    clear();
    alert('–ö–æ—Ä–∑–∏–Ω–∞ –æ—á–∏—â–µ–Ω–∞');
  };

  if (!telegramUser) {
    return (
      <div className="min-h-screen bg-gradient-to-br from-gray-900 via-black to-gray-900 flex items-center justify-center">
        <div className="text-center bg-black/40 backdrop-blur-xl rounded-2xl p-8 border border-amber-500/30 shadow-2xl shadow-amber-500/20">
          <div className="text-6xl mb-6">üîí</div>
          <h1 className="text-3xl font-bold text-white mb-4">{t('–í–æ–π–¥–∏—Ç–µ —á–µ—Ä–µ–∑ Telegram')}</h1>
          <p className="text-gray-300 mb-6 max-w-md">
            {t('–î–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –∫–æ—Ä–∑–∏–Ω–µ –∏ –ø–æ–∫—É–ø–∫–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å—Å—è —á–µ—Ä–µ–∑ Telegram')}
          </p>
          <Button
            onClick={() => navigate('/auth')}
            className="px-8 py-4 bg-gradient-to-r from-amber-500 to-amber-600 hover:from-amber-600 hover:to-amber-700 text-white font-bold text-lg rounded-xl transition-all duration-300 hover:scale-105 shadow-2xl shadow-amber-500/30"
          >
            {t('–í–æ–π—Ç–∏ –≤ –∞–∫–∫–∞—É–Ω—Ç')}
          </Button>
        </div>
      </div>
    );
  }

  if (items.length === 0) {
    return (
      <div className="min-h-screen bg-gradient-to-br from-gray-900 via-black to-gray-900 flex items-center justify-center">
        <div className="text-center bg-black/40 backdrop-blur-xl rounded-2xl p-8 border border-amber-500/30 shadow-2xl shadow-amber-500/20">
          <div className="text-6xl mb-6">üõí</div>
          <h1 className="text-3xl font-bold text-white mb-4">{t('–ö–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞')}</h1>
          <p className="text-gray-300 mb-6 max-w-md">
            {t('–î–æ–±–∞–≤—å—Ç–µ —Ç–æ–≤–∞—Ä—ã –∏–∑ –∫–∞—Ç–∞–ª–æ–≥–∞, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –ø–æ–∫—É–ø–∫–∏')}
          </p>
          <Button
            onClick={() => navigate('/catalog')}
            className="px-8 py-4 bg-gradient-to-r from-amber-500 to-amber-600 hover:from-amber-600 hover:to-amber-700 text-white font-bold text-lg rounded-xl transition-all duration-300 hover:scale-105 shadow-2xl shadow-amber-500/30"
          >
            {t('–ü–µ—Ä–µ–π—Ç–∏ –≤ –∫–∞—Ç–∞–ª–æ–≥')}
          </Button>
        </div>
      </div>
    );
  }

  return (
    <div className="min-h-screen bg-gradient-to-br from-gray-900 via-black to-gray-900">
      {/* Hero Section */}
      <div className="relative overflow-hidden">
        <div className="absolute inset-0 bg-gradient-to-br from-black/20 via-transparent to-black/20"></div>
        <div className="relative z-10 container mx-auto px-4 py-20 text-center">
          <h1 className="text-5xl md:text-6xl font-bold mb-6 bg-gradient-to-r from-amber-400 to-amber-600 bg-clip-text text-transparent animate-pulse">
            üõí {t('–ö–æ—Ä–∑–∏–Ω–∞')}
          </h1>
          <p className="text-xl md:text-2xl text-gray-300 mb-12 max-w-4xl mx-auto leading-relaxed">
            –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≤—ã–±—Ä–∞–Ω–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã –∏ –æ—Ñ–æ—Ä–º–∏—Ç–µ –∑–∞–∫–∞–∑. –ú—ã –≥–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ–º –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å 
            –∏ –±—ã—Å—Ç—Ä–æ—Ç—É –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤—Å–µ—Ö –ø–æ–∫—É–ø–æ–∫.
          </p>
          
          {/* –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∫–æ—Ä–∑–∏–Ω—ã */}
          <div className="grid grid-cols-1 md:grid-cols-3 gap-6 max-w-2xl mx-auto mb-8">
            <div className="text-center p-4 bg-black/40 backdrop-blur-sm rounded-xl border border-amber-500/20">
              <div className="text-2xl mb-2">üì¶</div>
              <p className="text-gray-300 text-sm">–¢–æ–≤–∞—Ä–æ–≤ –≤ –∫–æ—Ä–∑–∏–Ω–µ</p>
              <p className="text-amber-400 font-bold text-lg">{items.length}</p>
            </div>
            <div className="text-center p-4 bg-black/40 backdrop-blur-sm rounded-xl border border-amber-500/20">
              <div className="text-2xl mb-2">üí∞</div>
              <p className="text-gray-300 text-sm">–û–±—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å</p>
              <p className="text-amber-400 font-bold text-lg">{total}‚Ç¥</p>
            </div>
            <div className="text-center p-4 bg-black/40 backdrop-blur-sm rounded-xl border border-amber-500/20">
              <div className="text-2xl mb-2">üí≥</div>
              <p className="text-gray-300 text-sm">–í–∞—à –±–∞–ª–∞–Ω—Å</p>
              <p className="text-amber-400 font-bold text-lg">{balance}‚Ç¥</p>
            </div>
          </div>
        </div>
        
        {/* –ê–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã —Ñ–æ–Ω–∞ */}
        <div className="absolute top-20 left-10 w-20 h-20 bg-amber-400/10 rounded-full animate-bounce"></div>
        <div className="absolute top-40 right-20 w-16 h-16 bg-amber-500/10 rounded-full animate-pulse"></div>
        <div className="absolute bottom-20 left-1/4 w-12 h-12 bg-amber-400/10 rounded-full animate-spin"></div>
      </div>

      {/* –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç */}
      <div className="relative z-20 container mx-auto px-4 pb-20">
        <div className="grid grid-cols-1 lg:grid-cols-3 gap-8">
          {/* –°–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤ */}
          <div className="lg:col-span-2 space-y-6">
            <h2 className="text-2xl font-bold text-white mb-6">–í—ã–±—Ä–∞–Ω–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã</h2>
            
            {items.map((item, index) => (
              <div 
                key={item.id}
                className="bg-black/40 backdrop-blur-xl rounded-2xl border border-amber-500/30 shadow-2xl shadow-amber-500/20 p-6 hover:shadow-amber-500/40 transition-all duration-300"
                style={{ animationDelay: `${index * 0.1}s` }}
              >
                <div className="flex items-center space-x-4">
                  {/* –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ */}
                  <div className="w-20 h-20 bg-gradient-to-br from-amber-400/20 to-amber-600/20 rounded-xl flex items-center justify-center border border-amber-500/30">
                    <img
                      src={item.image_url || item.image || '/placeholder.svg'}
                      alt={item.name}
                      className="w-16 h-16 object-cover rounded-lg"
                      onError={(e) => {
                        const target = e.target as HTMLImageElement;
                        target.src = '/placeholder.svg';
                      }}
                    />
                  </div>
                  
                  {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–æ–≤–∞—Ä–µ */}
                  <div className="flex-1">
                    <h3 className="text-white font-semibold text-lg mb-2">{item.name}</h3>
                    <div className="flex items-center space-x-4 text-gray-300">
                      <span>–¶–µ–Ω–∞: <span className="text-amber-400 font-bold">{item.price}‚Ç¥</span></span>
                      <span>–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: <span className="text-amber-400 font-bold">{item.quantity}</span></span>
                    </div>
                  </div>
                  
                  {/* –î–µ–π—Å—Ç–≤–∏—è */}
                  <div className="flex flex-col items-end space-y-2">
                    <div className="text-xl font-bold text-amber-400">
                      {item.price * item.quantity}‚Ç¥
                    </div>
                    
                    <div className="flex items-center space-x-2">
                      <Button
                        size="sm"
                        variant="outline"
                        onClick={() => updateQuantity(item.id, Math.max(1, item.quantity - 1))}
                        className="w-8 h-8 p-0 bg-black/60 backdrop-blur-sm border border-amber-500/40 text-amber-300 hover:bg-amber-500/20 hover:border-amber-400 hover:text-amber-200 transition-all duration-300 rounded-lg"
                      >
                        -
                      </Button>
                      <span className="text-white font-medium min-w-[2rem] text-center">
                        {item.quantity}
                      </span>
                      <Button
                        size="sm"
                        variant="outline"
                        onClick={() => updateQuantity(item.id, item.quantity + 1)}
                        className="w-8 h-8 p-0 bg-black/60 backdrop-blur-sm border border-amber-500/40 text-amber-300 hover:bg-amber-500/20 hover:border-amber-400 hover:text-amber-200 transition-all duration-300 rounded-lg"
                      >
                        +
                      </Button>
                    </div>
                    
                    <Button
                      size="sm"
                      variant="outline"
                      onClick={() => handleRemoveItem(item.id)}
                      className="bg-black/60 backdrop-blur-sm border border-red-500/40 text-red-300 hover:bg-red-500/20 hover:border-red-400 hover:text-red-200 transition-all duration-300 rounded-lg"
                    >
                      <Trash2 className="w-4 h-4" />
                    </Button>
                  </div>
                </div>
              </div>
            ))}
            
            {/* –ö–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–æ—Ä–∑–∏–Ω–æ–π */}
            <div className="flex flex-col sm:flex-row gap-4">
              <Button
                onClick={handleClearCart}
                variant="outline"
                className="px-6 py-3 bg-black/60 backdrop-blur-sm border border-red-500/40 text-red-300 hover:bg-red-500/20 hover:border-red-400 hover:text-red-200 transition-all duration-300 shadow-lg shadow-red-500/20 rounded-xl"
              >
                <Trash2 className="w-5 h-5 mr-2" />
                –û—á–∏—Å—Ç–∏—Ç—å –∫–æ—Ä–∑–∏–Ω—É
              </Button>
              
              <Button
                onClick={() => navigate('/catalog')}
                variant="outline"
                className="px-6 py-3 bg-black/60 backdrop-blur-sm border border-amber-500/40 text-amber-300 hover:bg-amber-500/20 hover:border-amber-400 hover:text-amber-200 transition-all duration-300 shadow-lg shadow-amber-500/20 rounded-xl"
              >
                <ShoppingBag className="w-5 h-5 mr-2" />
                –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –ø–æ–∫—É–ø–∫–∏
              </Button>
            </div>
          </div>

          {/* –ò—Ç–æ–≥–æ–≤–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
          <div className="lg:col-span-1">
            <div className="sticky top-8">
              <div className="bg-black/40 backdrop-blur-xl rounded-2xl border border-amber-500/30 shadow-2xl shadow-amber-500/20 p-6">
                <h3 className="text-xl font-bold text-white mb-6 flex items-center">
                  <CheckCircle className="w-6 h-6 mr-3 text-amber-400" />
                  –ò—Ç–æ–≥–æ –∑–∞–∫–∞–∑–∞
                </h3>
                
                <div className="space-y-4 mb-6">
                  <div className="flex justify-between items-center">
                    <span className="text-gray-300">–¢–æ–≤–∞—Ä–æ–≤:</span>
                    <span className="text-white font-medium">{items.length}</span>
                  </div>
                  
                  <div className="flex justify-between items-center">
                    <span className="text-gray-300">–°—Ç–æ–∏–º–æ—Å—Ç—å:</span>
                    <span className="text-amber-400 font-bold">{total}‚Ç¥</span>
                  </div>
                  
                  <div className="flex justify-between items-center">
                    <span className="text-gray-300">–í–∞—à –±–∞–ª–∞–Ω—Å:</span>
                    <span className={`font-bold ${balance >= total ? 'text-green-400' : 'text-red-400'}`}>
                      {balance}‚Ç¥
                    </span>
                  </div>
                  
                  {balance < total && (
                    <div className="p-3 bg-red-500/20 border border-red-500/30 rounded-lg">
                      <p className="text-red-400 text-sm text-center">
                        –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –¥–ª—è –ø–æ–∫—É–ø–∫–∏
                      </p>
                    </div>
                  )}
                </div>
                
                <Button
                  onClick={handleCheckout}
                  disabled={isProcessing || balance < total}
                  className="w-full py-4 bg-gradient-to-r from-amber-500 to-amber-600 hover:from-amber-600 hover:to-amber-700 disabled:from-gray-500 disabled:to-gray-600 text-white font-bold rounded-xl transition-all duration-300 hover:scale-105 shadow-2xl shadow-amber-500/30 disabled:shadow-none disabled:cursor-not-allowed"
                >
                  {isProcessing ? (
                    <>
                      <div className="animate-spin rounded-full h-5 w-5 border-b-2 border-white mr-2"></div>
                      –û–±—Ä–∞–±–æ—Ç–∫–∞...
                    </>
                  ) : (
                    <>
                      <CreditCard className="w-5 h-5 mr-2" />
                      –û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑
                    </>
                  )}
                </Button>
                
                {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ */}
                <div className="mt-6 p-4 bg-black/30 backdrop-blur-sm rounded-lg border border-amber-500/20">
                  <div className="flex items-center space-x-2 mb-2">
                    <Shield className="w-4 h-4 text-amber-400" />
                    <span className="text-amber-400 text-sm font-medium">–ë–µ–∑–æ–ø–∞—Å–Ω–∞—è –ø–æ–∫—É–ø–∫–∞</span>
                  </div>
                  <p className="text-gray-300 text-xs">
                    –í—Å–µ –ø–ª–∞—Ç–µ–∂–∏ –∑–∞—â–∏—â–µ–Ω—ã —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–º–∏ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—è–º–∏ —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏—è
                  </p>
                </div>
              </div>
            </div>
          </div>
        </div>

        {/* –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
        <div className="mt-20">
          <div className="grid grid-cols-1 md:grid-cols-3 gap-6">
            <div className="bg-black/40 backdrop-blur-xl rounded-2xl border border-amber-500/30 shadow-2xl shadow-amber-500/20 p-6 text-center">
              <div className="mx-auto w-16 h-16 bg-gradient-to-br from-amber-400/20 to-amber-600/20 rounded-full flex items-center justify-center mb-4 border border-amber-500/30">
                <Package className="w-8 h-8 text-amber-400" />
              </div>
              <h4 className="text-white font-semibold mb-2">–ë—ã—Å—Ç—Ä–∞—è –¥–æ—Å—Ç–∞–≤–∫–∞</h4>
              <p className="text-gray-300 text-sm">
                –¢–æ–≤–∞—Ä—ã –¥–æ—Å—Ç–∞–≤–ª—è—é—Ç—Å—è –º–≥–Ω–æ–≤–µ–Ω–Ω–æ –ø–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã
              </p>
            </div>
            
            <div className="bg-black/40 backdrop-blur-xl rounded-2xl border border-amber-500/30 shadow-2xl shadow-amber-500/20 p-6 text-center">
              <div className="mx-auto w-16 h-16 bg-gradient-to-br from-amber-400/20 to-amber-600/20 rounded-full flex items-center justify-center mb-4 border border-amber-500/30">
                <Shield className="w-8 h-8 text-amber-400" />
              </div>
              <h4 className="text-white font-semibold mb-2">–ì–∞—Ä–∞–Ω—Ç–∏—è –∫–∞—á–µ—Å—Ç–≤–∞</h4>
              <p className="text-gray-300 text-sm">
                –í—Å–µ —Ç–æ–≤–∞—Ä—ã –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–µ –∏ –ª–∏—Ü–µ–Ω–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ
              </p>
            </div>
            
            <div className="bg-black/40 backdrop-blur-xl rounded-2xl border border-amber-500/30 shadow-2xl shadow-amber-500/20 p-6 text-center">
              <div className="mx-auto w-16 h-16 bg-gradient-to-br from-amber-400/20 to-amber-600/20 rounded-full flex items-center justify-center mb-4 border border-amber-500/30">
                <Zap className="w-8 h-8 text-amber-400" />
              </div>
              <h4 className="text-white font-semibold mb-2">–ü–æ–¥–¥–µ—Ä–∂–∫–∞ 24/7</h4>
              <p className="text-gray-300 text-sm">
                –ü–æ–º–æ—â—å –ø–æ –ª—é–±—ã–º –≤–æ–ø—Ä–æ—Å–∞–º –≤ –ª—é–±–æ–µ –≤—Ä–µ–º—è
              </p>
            </div>
          </div>
        </div>

        {/* –ö–Ω–æ–ø–∫–∞ –Ω–∞–∑–∞–¥ */}
        <div className="text-center mt-16">
          <Button
            onClick={() => navigate('/')}
            variant="outline"
            className="px-8 py-3 bg-black/60 backdrop-blur-sm border border-amber-500/40 text-amber-300 hover:bg-amber-500/20 hover:border-amber-400 hover:text-amber-200 transition-all duration-300 shadow-lg shadow-amber-500/20 rounded-xl"
          >
            <ArrowLeft className="w-4 h-4 mr-2" />
            –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞ –≥–ª–∞–≤–Ω—É—é
          </Button>
        </div>
      </div>


               {/* –ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç–æ–≤—ã–π –º–æ–¥–∞–ª */}
        {showSuccessModal && (
          <div 
            style={{
              position: 'fixed',
              top: 0,
              left: 0,
              right: 0,
              bottom: 0,
              backgroundColor: 'rgba(0, 0, 0, 0.8)',
              zIndex: 99999,
              display: 'flex',
              alignItems: 'center',
              justifyContent: 'center',
              padding: '20px'
            }}
          >
            <div 
              style={{
                backgroundColor: '#1f2937',
                border: '2px solid #f59e0b',
                borderRadius: '16px',
                padding: '32px',
                maxWidth: '500px',
                width: '100%',
                textAlign: 'center'
              }}
            >
              <h2 style={{ color: 'white', fontSize: '24px', marginBottom: '20px' }}>
                üéâ –ó–∞–∫–∞–∑ –æ—Ñ–æ—Ä–º–ª–µ–Ω!
              </h2>
              
              <p style={{ color: '#d1d5db', marginBottom: '20px' }}>
                –ù–æ–º–µ—Ä –∑–∞–∫–∞–∑–∞: <strong style={{ color: '#f59e0b' }}>{orderId}</strong>
              </p>
              
              <p style={{ color: '#f59e0b', marginBottom: '20px' }}>
                –°–≤—è–∂–∏—Ç–µ—Å—å —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º —á–µ—Ä–µ–∑ Telegram –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–æ–≤
              </p>
              
              <div style={{ display: 'flex', gap: '10px', justifyContent: 'center' }}>
                <button
                  onClick={() => {
                    setShowSuccessModal(false);
                    navigate('/profile');
                  }}
                  style={{
                    backgroundColor: '#f59e0b',
                    color: 'white',
                    border: 'none',
                    padding: '12px 24px',
                    borderRadius: '8px',
                    cursor: 'pointer',
                    fontWeight: 'bold'
                  }}
                >
                  –í –ø—Ä–æ—Ñ–∏–ª—å
                </button>
                
                <button
                  onClick={() => {
                    setShowSuccessModal(false);
                    navigate('/');
                  }}
                  style={{
                    backgroundColor: 'transparent',
                    color: '#f59e0b',
                    border: '2px solid #f59e0b',
                    padding: '12px 24px',
                    borderRadius: '8px',
                    cursor: 'pointer'
                  }}
                >
                  –ù–∞ –≥–ª–∞–≤–Ω—É—é
                </button>
              </div>
            </div>
          </div>
        )}
     </div>
   );
 };

export default Cart;