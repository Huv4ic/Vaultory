import { useState, useEffect } from 'react';
import { useNavigate } from 'react-router-dom';
import { Button } from '@/components/ui/button';
import { Trash2, ShoppingBag, ArrowLeft, CheckCircle, Package, CreditCard, Shield, Zap, MessageCircle } from 'lucide-react';
import { useCart } from '@/hooks/useCart';
import { useAuth } from '@/hooks/useAuth';
import { useLanguage } from '@/hooks/useLanguage';
import { useOrders } from '@/hooks/useOrders';
import { useNotification } from '../hooks/useNotification';
import Notification from '../components/ui/Notification';

const Cart = () => {
  const navigate = useNavigate();
  const { t } = useLanguage();
  const { telegramUser, balance } = useAuth();

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —á–∏—Å–ª–∞ —Å —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—è–º–∏
  const formatNumber = (amount: number): string => {
    return amount.toString().replace(/\B(?=(\d{3})+(?!\d))/g, '.');
  };
  const { items, removeItem, clear, updateQuantity } = useCart();
  const { createOrder, isProcessing } = useOrders();
  const { showSuccess, showError, notification, hideNotification } = useNotification();




  const total = items.reduce((sum, item) => sum + (item.price * item.quantity), 0);

    const handleCheckout = async () => {
    if (!telegramUser) {
      showError('–í–æ–π–¥–∏—Ç–µ —á–µ—Ä–µ–∑ Telegram –¥–ª—è –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞');
      return;
    }

    if (balance < total) {
      showError('–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –¥–ª—è –ø–æ–∫—É–ø–∫–∏');
      return;
    }

    try {
      console.log('–ù–∞—á–∏–Ω–∞–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ –∑–∞–∫–∞–∑–∞...');
      const result = await createOrder(items, total);
      console.log('–†–µ–∑—É–ª—å—Ç–∞—Ç createOrder:', result);
      
             if (result.success && result.orderId) {
         console.log('–ó–∞–∫–∞–∑ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω!');
         console.log('OrderId:', result.orderId);
         console.log('–û—á–∏—â–∞–µ–º –∫–æ—Ä–∑–∏–Ω—É');
         clear(); // –û—á–∏—â–∞–µ–º –∫–æ—Ä–∑–∏–Ω—É
         
         // –û–±–Ω–æ–≤–ª—è–µ–º –±–∞–ª–∞–Ω—Å —Å—Ä–∞–∑—É
         console.log('–û–±–Ω–æ–≤–ª—è–µ–º –±–∞–ª–∞–Ω—Å...');
         // await refreshBalance(); // This line was removed from the new_code, so it's removed here.
         console.log('–ë–∞–ª–∞–Ω—Å –æ–±–Ω–æ–≤–ª–µ–Ω');
         
         // –§–æ—Ä–º–∏—Ä—É–µ–º —Å–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤ –¥–ª—è –ø–µ—Ä–µ–¥–∞—á–∏
         const itemsList = items.map(item => `${item.name} x${item.quantity}`).join(', ');
         
         // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É —É—Å–ø–µ—Ö–∞ —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
         const params = new URLSearchParams({
           orderId: result.orderId,
           total: total.toString(),
           items: itemsList
         });
         
         console.log('–ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É —É—Å–ø–µ—Ö–∞ —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏:', params.toString());
         navigate(`/order-success?${params.toString()}`);
       } else {
        console.error('–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–∫–∞–∑–∞:', result.error);
        showError(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–∏ –∑–∞–∫–∞–∑–∞: ${result.error}`);
      }
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–∏ –∑–∞–∫–∞–∑–∞:', error);
              showError('–ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–∏ –∑–∞–∫–∞–∑–∞');
    }
  };

  const handleRemoveItem = (itemId: string) => {
    removeItem(itemId);
          showSuccess('–¢–æ–≤–∞—Ä —É–¥–∞–ª–µ–Ω –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã');
  };

  const handleClearCart = () => {
    clear();
          showSuccess('–ö–æ—Ä–∑–∏–Ω–∞ –æ—á–∏—â–µ–Ω–∞');
  };

  if (!telegramUser) {
    return (
      <div className="min-h-screen bg-gradient-to-br from-gray-900 via-black to-gray-900 flex items-center justify-center">
        <div className="text-center bg-black/40 backdrop-blur-xl rounded-2xl p-8 border border-amber-500/30 shadow-2xl shadow-amber-500/20">
          <div className="text-6xl mb-6">üîí</div>
          <h1 className="text-3xl font-bold text-white mb-4">{t('–í–æ–π–¥–∏—Ç–µ —á–µ—Ä–µ–∑ Telegram')}</h1>
          <p className="text-gray-300 mb-6 max-w-md">
            {t('–î–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –∫–æ—Ä–∑–∏–Ω–µ –∏ –ø–æ–∫—É–ø–∫–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å—Å—è —á–µ—Ä–µ–∑ Telegram')}
          </p>
          <Button
            onClick={() => navigate('/auth')}
            className="px-8 py-4 bg-gradient-to-r from-amber-500 to-amber-600 hover:from-amber-600 hover:to-amber-700 text-white font-bold text-lg rounded-xl transition-all duration-300 hover:scale-105 shadow-2xl shadow-amber-500/30"
          >
            {t('–í–æ–π—Ç–∏ –≤ –∞–∫–∫–∞—É–Ω—Ç')}
          </Button>
        </div>
      </div>
    );
  }

  if (items.length === 0) {
    return (
      <div className="min-h-screen bg-gradient-to-br from-gray-900 via-black to-gray-900 flex items-center justify-center relative overflow-hidden">
        {/* –ê–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ñ–æ–Ω —Å —á–∞—Å—Ç–∏—Ü–∞–º–∏ */}
        <div className="absolute inset-0">
          <div className="absolute top-1/4 left-1/4 w-2 h-2 bg-blue-400/40 rounded-full animate-bounce"></div>
          <div className="absolute top-3/4 right-1/4 w-1 h-1 bg-purple-400/40 rounded-full animate-bounce delay-300"></div>
          <div className="absolute top-1/2 right-1/3 w-1.5 h-1.5 bg-pink-400/40 rounded-full animate-bounce delay-700"></div>
          <div className="absolute bottom-1/4 left-1/3 w-2 h-2 bg-cyan-400/30 rounded-full animate-pulse"></div>
          <div className="absolute top-1/3 right-1/2 w-1 h-1 bg-yellow-400/30 rounded-full animate-pulse delay-500"></div>
        </div>

        <div className="relative z-10 text-center max-w-lg mx-auto px-6">
          {/* –ì–ª–∞–≤–Ω—ã–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä —Å –∞–Ω–∏–º–∞—Ü–∏–µ–π –ø–æ—è–≤–ª–µ–Ω–∏—è */}
          <div className="bg-black/60 backdrop-blur-2xl rounded-3xl p-12 border border-white/10 shadow-2xl animate-fade-in-up relative overflow-hidden">
            
            {/* –î–µ–∫–æ—Ä–∞—Ç–∏–≤–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã */}
            <div className="absolute top-0 left-0 w-full h-1 bg-gradient-to-r from-transparent via-blue-500/50 to-transparent"></div>
            <div className="absolute bottom-0 left-0 w-full h-1 bg-gradient-to-r from-transparent via-purple-500/50 to-transparent"></div>
            
            {/* –ê–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –∏–∫–æ–Ω–∫–∞ –∫–æ—Ä–∑–∏–Ω—ã */}
            <div className="relative mb-8">
              <div className="relative inline-block">
                {/* –û—Å–Ω–æ–≤–Ω–∞—è –∏–∫–æ–Ω–∫–∞ */}
                <div className="text-8xl mb-4 transform transition-all duration-500 hover:scale-110 animate-float">
                  üõí
                </div>
                {/* –°–≤–µ—Ç—è—â–∏–π—Å—è —ç—Ñ—Ñ–µ–∫—Ç –∑–∞ –∏–∫–æ–Ω–∫–æ–π */}
                <div className="absolute inset-0 text-8xl mb-4 blur-xl opacity-30 animate-pulse">
                  üõí
                </div>
              </div>
              
              {/* –î–µ–∫–æ—Ä–∞—Ç–∏–≤–Ω—ã–µ –∫–æ–ª—å—Ü–∞ –≤–æ–∫—Ä—É–≥ –∏–∫–æ–Ω–∫–∏ */}
              <div className="absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 w-32 h-32 border-2 border-white/10 rounded-full animate-spin-slow"></div>
              <div className="absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 w-40 h-40 border border-white/5 rounded-full animate-spin-reverse"></div>
            </div>

            {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å –∞–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω—ã–º —Ç–µ–∫—Å—Ç–æ–º */}
            <div className="mb-6">
              <h1 className="text-4xl font-black text-white mb-2 tracking-wide relative">
                <span className="relative z-10">{t('–ö–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞')}</span>
                {/* –ü–æ–¥—Å–≤–µ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–∞ */}
                <div className="absolute inset-0 text-4xl font-black text-blue-400/20 blur-sm animate-pulse">
                  {t('–ö–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞')}
                </div>
              </h1>
              
              {/* –î–µ–∫–æ—Ä–∞—Ç–∏–≤–Ω–∞—è –ª–∏–Ω–∏—è –ø–æ–¥ –∑–∞–≥–æ–ª–æ–≤–∫–æ–º */}
              <div className="flex justify-center mt-4">
                <div className="h-1 w-16 bg-white/20 rounded-full relative overflow-hidden">
                  <div className="absolute inset-0 bg-gradient-to-r from-blue-500 to-purple-500 rounded-full animate-slide-right"></div>
                </div>
              </div>
            </div>

            {/* –û–ø–∏—Å–∞–Ω–∏–µ */}
            <p className="text-gray-300 mb-8 text-lg leading-relaxed max-w-sm mx-auto">
              {t('–î–æ–±–∞–≤—å—Ç–µ —Ç–æ–≤–∞—Ä—ã –∏–∑ –∫–∞—Ç–∞–ª–æ–≥–∞, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –ø–æ–∫—É–ø–∫–∏')}
            </p>

            {/* –ö–Ω–æ–ø–∫–∞ —Å —É–ª—É—á—à–µ–Ω–Ω—ã–º –¥–∏–∑–∞–π–Ω–æ–º */}
            <div className="relative">
              <Button
                onClick={() => navigate('/catalog')}
                className="group relative px-10 py-4 bg-white/10 backdrop-blur-sm border-2 border-white/20 text-white font-bold text-lg rounded-2xl transition-all duration-500 hover:scale-105 hover:border-white/40 hover:bg-white/20 shadow-2xl hover:shadow-white/10 overflow-hidden"
              >
                {/* –ê–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ñ–æ–Ω –∫–Ω–æ–ø–∫–∏ */}
                <div className="absolute inset-0 bg-gradient-to-r from-blue-500/20 to-purple-500/20 opacity-0 group-hover:opacity-100 transition-opacity duration-500"></div>
                
                {/* –°–≤–µ—Ç—è—â–∏–π—Å—è —ç—Ñ—Ñ–µ–∫—Ç –ø—Ä–∏ hover */}
                <div className="absolute inset-0 bg-gradient-to-r from-transparent via-white/10 to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-500 transform -skew-x-12 group-hover:translate-x-full"></div>
                
                <span className="relative z-10 flex items-center justify-center">
                  <ShoppingBag className="w-5 h-5 mr-3 transition-transform duration-300 group-hover:scale-110" />
                  {t('–ü–µ—Ä–µ–π—Ç–∏ –≤ –∫–∞—Ç–∞–ª–æ–≥')}
                </span>
              </Button>
              
              {/* –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ —Å–≤–µ—á–µ–Ω–∏–µ –ø–æ–¥ –∫–Ω–æ–ø–∫–æ–π */}
              <div className="absolute -bottom-4 left-1/2 transform -translate-x-1/2 w-24 h-1 bg-gradient-to-r from-transparent via-white/20 to-transparent blur-sm"></div>
            </div>

            {/* –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –¥–µ–∫–æ—Ä–∞—Ç–∏–≤–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã */}
            <div className="absolute top-6 right-6 w-3 h-3 bg-blue-400/30 rounded-full animate-ping"></div>
            <div className="absolute bottom-6 left-6 w-2 h-2 bg-purple-400/30 rounded-full animate-ping delay-1000"></div>
          </div>

          {/* –¢–µ–∫—Å—Ç –ø–æ–¥—Å–∫–∞–∑–∫–∏ —Å–Ω–∏–∑—É */}
          <p className="text-gray-500 text-sm mt-6 animate-fade-in-delayed">
            üí° –û—Ç–∫—Ä–æ–π—Ç–µ –∫–∞—Ç–∞–ª–æ–≥ –∏ –Ω–∞–π–¥–∏—Ç–µ —á—Ç–æ-—Ç–æ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ–µ –¥–ª—è —Å–µ–±—è
          </p>
        </div>
      </div>
    );
  }

  return (
    <div className="min-h-screen bg-gradient-to-br from-gray-900 via-black to-gray-900">
      {/* Hero Section */}
      <div className="relative overflow-hidden">
        <div className="absolute inset-0 bg-gradient-to-br from-black/20 via-transparent to-black/20"></div>
        <div className="relative z-10 container mx-auto px-4 py-20 text-center">
          <h1 className="text-5xl md:text-6xl font-bold mb-6 bg-gradient-to-r from-amber-400 to-amber-600 bg-clip-text text-transparent animate-pulse">
            üõí {t('–ö–æ—Ä–∑–∏–Ω–∞')}
          </h1>
          <p className="text-xl md:text-2xl text-gray-300 mb-12 max-w-4xl mx-auto leading-relaxed">
            –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≤—ã–±—Ä–∞–Ω–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã –∏ –æ—Ñ–æ—Ä–º–∏—Ç–µ –∑–∞–∫–∞–∑. –ú—ã –≥–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ–º –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å 
            –∏ –±—ã—Å—Ç—Ä–æ—Ç—É –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤—Å–µ—Ö –ø–æ–∫—É–ø–æ–∫.
          </p>
          
          {/* –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∫–æ—Ä–∑–∏–Ω—ã */}
          <div className="grid grid-cols-1 md:grid-cols-3 gap-6 max-w-2xl mx-auto mb-8">
            <div className="text-center p-4 bg-black/40 backdrop-blur-sm rounded-xl border border-amber-500/20">
              <div className="text-2xl mb-2">üì¶</div>
              <p className="text-gray-300 text-sm">–¢–æ–≤–∞—Ä–æ–≤ –≤ –∫–æ—Ä–∑–∏–Ω–µ</p>
              <p className="text-amber-400 font-bold text-lg">{items.length}</p>
            </div>
            <div className="text-center p-4 bg-black/40 backdrop-blur-sm rounded-xl border border-amber-500/20">
              <div className="text-2xl mb-2">üí∞</div>
              <p className="text-gray-300 text-sm">–û–±—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å</p>
              <p className="text-amber-400 font-bold text-lg">{formatNumber(total)}‚Ç¥</p>
            </div>
            <div className="text-center p-4 bg-black/40 backdrop-blur-sm rounded-xl border border-amber-500/20">
              <div className="text-2xl mb-2">üí≥</div>
              <p className="text-gray-300 text-sm">–í–∞—à –±–∞–ª–∞–Ω—Å</p>
              <p className="text-amber-400 font-bold text-lg">{formatNumber(balance)}‚Ç¥</p>
            </div>
          </div>
        </div>
        
        {/* –ê–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã —Ñ–æ–Ω–∞ */}
        <div className="absolute top-20 left-10 w-20 h-20 bg-amber-400/10 rounded-full animate-bounce"></div>
        <div className="absolute top-40 right-20 w-16 h-16 bg-amber-500/10 rounded-full animate-pulse"></div>
        <div className="absolute bottom-20 left-1/4 w-12 h-12 bg-amber-400/10 rounded-full animate-spin"></div>
      </div>

      {/* –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç */}
      <div className="relative z-20 container mx-auto px-4 pb-12 sm:pb-16 md:pb-20">
        <div className="grid grid-cols-1 lg:grid-cols-3 gap-6 sm:gap-8">
          {/* –°–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤ */}
          <div className="lg:col-span-2 space-y-4 sm:space-y-6">
            <h2 className="text-xl sm:text-2xl font-bold text-white mb-4 sm:mb-6">–í—ã–±—Ä–∞–Ω–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã</h2>
            
            {items.map((item, index) => (
              <div 
                key={item.id}
                className="bg-black/40 backdrop-blur-xl rounded-xl sm:rounded-2xl border border-amber-500/30 shadow-2xl shadow-amber-500/20 p-4 sm:p-6 hover:shadow-amber-500/40 transition-all duration-300"
                style={{ animationDelay: `${index * 0.1}s` }}
              >
                <div className="flex flex-col sm:flex-row sm:items-center space-y-3 sm:space-y-0 sm:space-x-4">
                  {/* –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ */}
                  <div className="w-16 h-16 sm:w-20 sm:h-20 bg-gradient-to-br from-amber-400/20 to-amber-600/20 rounded-lg sm:rounded-xl overflow-hidden border border-amber-500/30">
                    <img
                      src={item.image_url || item.image || '/placeholder.svg'}
                      alt={item.name}
                      className="w-full h-full object-cover"
                      onError={(e) => {
                        const target = e.target as HTMLImageElement;
                        target.src = '/placeholder.svg';
                      }}
                    />
                  </div>
                  
                  {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–æ–≤–∞—Ä–µ */}
                  <div className="flex-1">
                    <h3 className="text-sm sm:text-base font-semibold text-white mb-1 sm:mb-2">{item.name}</h3>
                    <p className="text-lg sm:text-xl font-bold text-amber-400 mb-2 sm:mb-3">{item.price}‚Ç¥</p>
                    
                    {/* –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º */}
                    <div className="flex items-center space-x-2 sm:space-x-3">
                      <Button
                        onClick={() => updateQuantity(item.id, Math.max(1, item.quantity - 1))}
                        size="sm"
                        className="w-8 h-8 sm:w-10 sm:h-10 p-0 bg-gradient-to-r from-red-600 to-purple-700 hover:from-red-700 hover:to-purple-800 border border-red-500/30 text-white hover:text-red-100 transition-all duration-300 rounded-lg shadow-lg shadow-red-500/20 hover:shadow-red-500/40 hover:scale-105"
                      >
                        -
                      </Button>
                      <span className="text-white font-semibold min-w-[2rem] text-center text-sm sm:text-base">{item.quantity}</span>
                      <Button
                        onClick={() => updateQuantity(item.id, item.quantity + 1)}
                        size="sm"
                        className="w-8 h-8 sm:w-10 sm:h-10 p-0 bg-gradient-to-r from-red-600 to-purple-700 hover:from-red-700 hover:to-purple-800 border border-red-500/30 text-white hover:text-red-100 transition-all duration-300 rounded-lg shadow-lg shadow-red-500/20 hover:shadow-red-500/40 hover:scale-105"
                      >
                        +
                      </Button>
                      <Button
                        onClick={() => removeItem(item.id)}
                        size="sm"
                        variant="outline"
                        className="w-8 h-8 sm:w-10 sm:h-10 p-0 border-red-500/30 text-red-400 hover:bg-red-500/20 hover:border-red-400 hover:text-red-300 transition-all duration-300 ml-2 sm:ml-3"
                      >
                        <Trash2 className="w-3 h-3 sm:w-4 sm:h-4" />
                      </Button>
                    </div>
                  </div>
                </div>
              </div>
            ))}
            
            {items.length === 0 && (
              <div className="text-center py-12 sm:py-16">
                <ShoppingBag className="w-16 h-16 sm:w-20 sm:h-20 mx-auto mb-4 text-gray-600" />
                <h3 className="text-lg sm:text-xl font-semibold text-gray-400 mb-2">–ö–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞</h3>
                <p className="text-gray-500 text-sm sm:text-base mb-6">–î–æ–±–∞–≤—å—Ç–µ —Ç–æ–≤–∞—Ä—ã –∏–∑ –∫–∞—Ç–∞–ª–æ–≥–∞</p>
                <Button
                  onClick={() => navigate('/catalog')}
                  className="px-6 sm:px-8 py-2 sm:py-3 bg-gradient-to-r from-amber-500 to-amber-600 hover:from-amber-600 hover:to-amber-700 text-white font-bold rounded-lg sm:rounded-xl transition-all duration-300 hover:scale-105 shadow-xl shadow-amber-500/30 text-sm sm:text-base"
                >
                  –ü–µ—Ä–µ–π—Ç–∏ –≤ –∫–∞—Ç–∞–ª–æ–≥
                </Button>
              </div>
            )}
          </div>

          {/* –ü—Ä–∞–≤–∞—è –ø–∞–Ω–µ–ª—å */}
          <div className="space-y-4 sm:space-y-6">
            {/* –ò—Ç–æ–≥–æ */}
            <div className="bg-black/40 backdrop-blur-xl rounded-xl sm:rounded-2xl border border-amber-500/30 shadow-2xl shadow-amber-500/20 p-4 sm:p-6">
              <h3 className="text-lg sm:text-xl font-bold text-white mb-3 sm:mb-4">–ò—Ç–æ–≥–æ</h3>
              <div className="space-y-2 sm:space-y-3 mb-4 sm:mb-6">
                <div className="flex justify-between text-sm sm:text-base">
                  <span className="text-gray-300">–¢–æ–≤–∞—Ä—ã ({items.length})</span>
                  <span className="text-white">{formatNumber(total)}‚Ç¥</span>
                </div>
                <div className="flex justify-between text-sm sm:text-base">
                  <span className="text-gray-300">–ö–æ–º–∏—Å—Å–∏—è</span>
                  <span className="text-white">0‚Ç¥</span>
                </div>
                <div className="border-t border-amber-500/30 pt-2 sm:pt-3">
                  <div className="flex justify-between text-lg sm:text-xl font-bold">
                    <span className="text-white">–í—Å–µ–≥–æ –∫ –æ–ø–ª–∞—Ç–µ</span>
                    <span className="text-amber-400">{formatNumber(total)}‚Ç¥</span>
                  </div>
                </div>
              </div>
              
              <Button
                onClick={handleCheckout}
                disabled={items.length === 0 || !telegramUser || isProcessing}
                className="w-full py-3 sm:py-4 bg-gradient-to-r from-amber-500 to-amber-600 hover:from-amber-600 hover:to-amber-700 text-white font-bold rounded-lg sm:rounded-xl transition-all duration-300 hover:scale-105 shadow-xl shadow-amber-500/30 text-sm sm:text-base disabled:opacity-50 disabled:cursor-not-allowed"
              >
                {isProcessing ? (
                  <div className="flex items-center">
                    <div className="animate-spin rounded-full h-4 w-4 sm:h-5 sm:w-5 border-b-2 border-white mr-2 sm:mr-3"></div>
                    –û–±—Ä–∞–±–æ—Ç–∫–∞...
                  </div>
                ) : (
                  <>
                    <CheckCircle className="w-4 h-4 sm:w-5 sm:h-5 mr-2" />
                    –û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑
                  </>
                )}
              </Button>
            </div>

            {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ */}
            <div className="bg-black/40 backdrop-blur-xl rounded-xl sm:rounded-2xl border border-amber-500/30 shadow-2xl shadow-amber-500/20 p-4 sm:p-6 text-center">
              <div className="mx-auto w-12 h-12 sm:w-16 sm:h-16 bg-gradient-to-br from-amber-400/20 to-amber-600/20 rounded-full flex items-center justify-center mb-3 sm:mb-4 border border-amber-500/30">
                <Shield className="w-6 h-6 sm:w-8 sm:h-8 text-amber-400" />
              </div>
              <h4 className="text-white font-semibold mb-2 text-sm sm:text-base">–ë–µ–∑–æ–ø–∞—Å–Ω–∞—è –æ–ø–ª–∞—Ç–∞</h4>
              <p className="text-gray-300 text-xs sm:text-sm">
                –í—Å–µ –ø–ª–∞—Ç–µ–∂–∏ –∑–∞—â–∏—â–µ–Ω—ã –∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç—Å—è –±–µ–∑–æ–ø–∞—Å–Ω–æ
              </p>
            </div>
            
            <div className="bg-black/40 backdrop-blur-xl rounded-xl sm:rounded-2xl border border-amber-500/30 shadow-2xl shadow-amber-500/20 p-4 sm:p-6 text-center">
              <div className="mx-auto w-12 h-12 sm:w-16 sm:h-16 bg-gradient-to-br from-amber-400/20 to-amber-600/20 rounded-full flex items-center justify-center mb-3 sm:mb-4 border border-amber-500/30">
                <Zap className="w-6 h-6 sm:w-8 sm:h-8 text-amber-400" />
              </div>
              <h4 className="text-white font-semibold mb-2 text-sm sm:text-base">–ü–æ–¥–¥–µ—Ä–∂–∫–∞ 24/7</h4>
              <p className="text-gray-300 text-xs sm:text-sm">
                –ü–æ–º–æ—â—å –ø–æ –ª—é–±—ã–º –≤–æ–ø—Ä–æ—Å–∞–º –≤ –ª—é–±–æ–µ –≤—Ä–µ–º—è
              </p>
            </div>
          </div>
        </div>

        {/* –ö–Ω–æ–ø–∫–∞ –Ω–∞–∑–∞–¥ */}
        <div className="text-center mt-12 sm:mt-16">
          <Button
            onClick={() => navigate('/')}
            variant="outline"
            className="px-6 sm:px-8 py-2 sm:py-3 bg-black/60 backdrop-blur-sm border border-amber-500/40 text-amber-300 hover:bg-amber-500/20 hover:border-amber-400 hover:text-amber-200 transition-all duration-300 shadow-lg shadow-amber-500/20 rounded-lg sm:rounded-xl text-sm sm:text-base"
          >
            <ArrowLeft className="w-4 h-4 mr-2" />
            –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞ –≥–ª–∞–≤–Ω—É—é
          </Button>
        </div>
      </div>
      
      {/* –ö—Ä–∞—Å–∏–≤—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è */}
      <Notification
        show={notification.show}
        message={notification.message}
        type={notification.type}
        onClose={hideNotification}
        autoHide={notification.autoHide}
        duration={notification.duration}
      />
    </div>
  );
};

export default Cart;