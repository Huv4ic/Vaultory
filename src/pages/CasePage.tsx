import React, { useState, useEffect } from 'react';
import { useParams, useNavigate } from 'react-router-dom';
import { supabase } from '../integrations/supabase/client';
import { useCaseStats } from '../hooks/useCaseStats';
import { useInventory } from '../hooks/useInventory';
import { useAuth } from '../hooks/useAuth';
import { Card, CardContent, CardHeader, CardTitle } from '../components/ui/card';
import { Button } from '../components/ui/button';
import { Badge } from '../components/ui/badge';
import { Package, ArrowLeft, Crown, Zap, Target, Shield } from 'lucide-react';
import CaseRoulette from '../components/CaseRoulette';

interface CaseItem {
  id: string;
  case_id: string;
  name: string;
  rarity: 'common' | 'rare' | 'epic' | 'legendary';
  drop_chance: number;
  image_url: string;
  price: number; // –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª–µ —Ü–µ–Ω—ã
}

interface Case {
  id: string;
  name: string;
  game_id?: string;
  game?: string;
  price: number;
  image?: string;
  image_url?: string;
  description?: string;
  gradient?: string;
  icon?: string;
  is_active?: boolean;
  sort_order?: number;
  created_at?: string;
  updated_at?: string;
}

const CasePage = () => {
  const { id } = useParams<{ id: string }>();
  const navigate = useNavigate();
  const { incrementCaseOpened } = useCaseStats();
  const { addItem } = useInventory();
  const { profile } = useAuth();
  const [caseData, setCaseData] = useState<Case | null>(null);
  const [caseItems, setCaseItems] = useState<CaseItem[]>([]);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState<string | null>(null);
  const [showRoulette, setShowRoulette] = useState(false);

  useEffect(() => {
    if (id) {
      fetchCaseData();
    }
  }, [id]);

  const fetchCaseData = async () => {
    try {
      setLoading(true);
      setError(null);

      // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∫–µ–π—Å–∞
      const { data: caseData, error: caseError } = await supabase
        .from('cases')
        .select('*')
        .eq('id', id)
        .single();

      if (caseError) throw caseError;

      // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –¥–∞–Ω–Ω—ã–µ –∫ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º—É —Ñ–æ—Ä–º–∞—Ç—É
      const formattedCase: Case = {
        ...caseData,
        image_url: caseData.image || '', // –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø–æ–ª–µ image –∏–∑ –±–∞–∑—ã
        game: 'Unknown Game' // –ü–æ–∫–∞ –∏—Å–ø–æ–ª—å–∑—É–µ–º –∑–∞–≥–ª—É—à–∫—É, —Ç–∞–∫ –∫–∞–∫ –≤ –±–∞–∑–µ –Ω–µ—Ç –ø–æ–ª—è game
      };

      setCaseData(formattedCase);

      // –ó–∞–≥—Ä—É–∂–∞–µ–º –ø—Ä–µ–¥–º–µ—Ç—ã –∫–µ–π—Å–∞
      const { data: itemsData, error: itemsError } = await supabase
        .from('admin_case_items') // –ò—Å–ø–æ–ª—å–∑—É–µ–º admin_case_items –≤–º–µ—Å—Ç–æ case_items
        .select('*')
        .eq('case_id', id)
        .order('name');

      if (itemsError) throw itemsError;

      // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –¥–∞–Ω–Ω—ã–µ –∫ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º—É —Ñ–æ—Ä–º–∞—Ç—É
      const formattedItems: CaseItem[] = (itemsData || []).map((item: any) => ({
        id: item.id,
        case_id: item.case_id,
        name: item.name,
        rarity: item.rarity,
        drop_chance: item.drop_chance || 0,
        image_url: item.image_url || '',
        price: item.price || 0 // –î–æ–±–∞–≤–ª—è–µ–º —Ü–µ–Ω—É –∏–∑ –±–∞–∑—ã
      }));

      setCaseItems(formattedItems);
      setLoading(false);

    } catch (err) {
      console.error('Error fetching case data:', err);
      setError('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–∞–Ω–Ω—ã—Ö –∫–µ–π—Å–∞');
      setLoading(false);
    }
  };

  const handleOpenCase = () => {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –ø—Ä–µ–¥–º–µ—Ç—ã –≤ –∫–µ–π—Å–µ
    if (caseItems.length === 0) {
      alert('–í —ç—Ç–æ–º –∫–µ–π—Å–µ –Ω–µ—Ç –ø—Ä–µ–¥–º–µ—Ç–æ–≤ –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è');
      return;
    }
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä—É–ª–µ—Ç–∫—É
    setShowRoulette(true);
  };

  const handleCaseOpened = async (item: CaseItem) => {
    // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø—Ä–µ–¥–º–µ—Ç–∞ –≤ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å
    console.log('üéâ –ö–µ–π—Å –æ—Ç–∫—Ä—ã—Ç! –í—ã–ø–∞–¥ –ø—Ä–µ–¥–º–µ—Ç:', item);
    console.log('üì¶ –î–∞–Ω–Ω—ã–µ –∫–µ–π—Å–∞:', caseData);
    
    // –î–û–ë–ê–í–õ–Ø–ï–ú –ü–†–ï–î–ú–ï–¢ –í –ò–ù–í–ï–ù–¢–ê–†–¨
    // –í–ê–ñ–ù–û: –≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ "–î–æ–±–∞–≤–∏—Ç—å –≤ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å"
    // –ü—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ "–ü—Ä–æ–¥–∞—Ç—å" –æ–Ω–∞ –ù–ï –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è
    try {
      const inventoryItem = {
        name: item.name,
        price: item.price, // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ü–µ–Ω—É –∏–∑ CaseItem
        rarity: item.rarity,
        type: 'case_item', // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
        caseId: item.case_id,
        case_name: caseData?.name || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –∫–µ–π—Å',
        image: undefined, // –£ CaseItem –Ω–µ—Ç –ø–æ–ª—è image
        image_url: item.image_url,
        obtained_at: new Date().toISOString()
      };
      
      console.log('üéÅ –°–æ–∑–¥–∞–µ–º –ø—Ä–µ–¥–º–µ—Ç –¥–ª—è –∏–Ω–≤–µ–Ω—Ç–∞—Ä—è:', inventoryItem);
      console.log('üîß –í—ã–∑—ã–≤–∞–µ–º addItem...');
      await addItem(inventoryItem);
      console.log('‚úÖ –ü—Ä–µ–¥–º–µ—Ç —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å!');
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –ø—Ä–µ–¥–º–µ—Ç–∞ –≤ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å:', error);
    }
    
    // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Å—á–µ—Ç—á–∏–∫ –æ—Ç–∫—Ä—ã—Ç–∏–π –∫–µ–π—Å–∞ –¥–ª—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
    if (caseData && id) {
      try {
        // caseId —É–∂–µ —è–≤–ª—è–µ—Ç—Å—è —Å—Ç—Ä–æ–∫–æ–π –∏–∑ URL –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
        const caseId = id;
        console.log('ID –∫–µ–π—Å–∞ –∏–∑ URL:', id, '–¢–∏–ø:', typeof caseId);
        
        if (!caseId || caseId.trim() === '') {
          console.error('–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π ID –∫–µ–π—Å–∞:', id);
          return;
        }
        
        await incrementCaseOpened(caseId, caseData.name, caseData.image_url);
        console.log('–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –æ—Ç–∫—Ä—ã—Ç–∏–π –∫–µ–π—Å–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∞');
      } catch (err) {
        console.error('–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏:', err);
      }
    } else {
      console.error('–û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –¥–∞–Ω–Ω—ã–µ –∫–µ–π—Å–∞ –∏–ª–∏ ID:', { caseData, id });
    }
    
    // –ù–ï –∑–∞–∫—Ä—ã–≤–∞–µ–º —Ä—É–ª–µ—Ç–∫—É –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ - –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–∞–º –∑–∞–∫—Ä–æ–µ—Ç –µ—ë –∫–Ω–æ–ø–∫–æ–π "–ó–∞–∫—Ä—ã—Ç—å"
    // –†—É–ª–µ—Ç–∫–∞ –±—É–¥–µ—Ç –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç –¥–æ —Ç–µ—Ö –ø–æ—Ä, –ø–æ–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–∂–º–µ—Ç –∫–Ω–æ–ø–∫—É
  };

  const getRarityIcon = (rarity: string) => {
    switch (rarity.toLowerCase()) {
      case 'legendary':
        return <Crown className="w-4 h-4 text-yellow-400" />;
      case 'epic':
        return <Zap className="w-4 h-4 text-purple-400" />;
      case 'rare':
        return <Target className="w-4 h-4 text-blue-400" />;
      default:
        return <Shield className="w-4 h-4 text-gray-400" />;
    }
  };

  const getRarityColor = (rarity: string) => {
    switch (rarity.toLowerCase()) {
      case 'legendary':
        return 'text-yellow-400 border-yellow-400';
      case 'epic':
        return 'text-purple-400 border-purple-400';
      case 'rare':
        return 'text-blue-400 border-blue-400';
      default:
        return 'text-gray-400 border-gray-400';
    }
  };

  const getRarityName = (rarity: string) => {
    switch (rarity.toLowerCase()) {
      case 'legendary':
        return '–õ–µ–≥–µ–Ω–¥–∞—Ä–Ω—ã–π';
      case 'epic':
        return '–≠–ø–∏—á–µ—Å–∫–∏–π';
      case 'rare':
        return '–†–µ–¥–∫–∏–π';
      default:
        return '–û–±—ã—á–Ω—ã–π';
    }
  };

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Ç–µ–º–∞—Ç–∏–∫–∏ –∫–µ–π—Å–∞ –∏ —Å—Ç–∏–ª–µ–π –∫–Ω–æ–ø–∫–∏
  const getCaseTheme = (caseName: string) => {
    const name = caseName.toLowerCase();
    
    // –ü—Ä–æ—Å—Ç—ã–µ –≥–æ—Ç–æ–≤—ã–µ —Å—Ç–∏–ª–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –∫–µ–π—Å–∞
    if (name.includes('—Ñ–µ–Ω–∏–∫—Å') || name.includes('phoenix')) {
      return "bg-gradient-to-r from-orange-500 via-red-500 to-orange-600 hover:from-orange-600 hover:via-red-600 hover:to-orange-700 text-white font-semibold px-4 sm:px-6 py-2 sm:py-3 rounded-xl transition-all duration-300 hover:scale-105 shadow-lg shadow-orange-500/30 border-0 text-sm sm:text-base";
    }
    
    if (name.includes('–≥–æ–¥–∑–∏–ª–ª–∞') || name.includes('godzilla')) {
      return "bg-gradient-to-r from-blue-600 via-blue-700 to-blue-800 hover:from-blue-700 hover:via-blue-800 hover:to-blue-900 text-white font-semibold px-4 sm:px-6 py-2 sm:py-3 rounded-xl transition-all duration-300 hover:scale-105 shadow-lg shadow-blue-500/30 border-0 text-sm sm:text-base";
    }
    
    if (name.includes('–≥–∞–¥—é–∫–∞') || name.includes('viper') || name.includes('–∑–º–µ—è') || name.includes('snake')) {
      return "bg-gradient-to-r from-green-500 via-green-600 to-green-700 hover:from-green-600 hover:via-green-700 hover:to-green-800 text-white font-semibold px-4 sm:px-6 py-2 sm:py-3 rounded-xl transition-all duration-300 hover:scale-105 shadow-lg shadow-green-500/30 border-0 text-sm sm:text-base";
    }
    
    if (name.includes('–∞–∫—É–ª–∞') || name.includes('shark') || name.includes('—Ä—ã–±–∞') || name.includes('fish')) {
      return "bg-gradient-to-r from-gray-600 via-gray-700 to-gray-800 hover:from-gray-700 hover:via-gray-800 hover:to-gray-900 text-white font-semibold px-4 sm:px-6 py-2 sm:py-3 rounded-xl transition-all duration-300 hover:scale-105 shadow-lg shadow-gray-500/30 border-0 text-sm sm:text-base";
    }
    
    if (name.includes('–¥—Ä–∞–∫–æ–Ω') || name.includes('dragon')) {
      return "bg-gradient-to-r from-red-600 via-red-700 to-red-800 hover:from-red-700 hover:via-red-800 hover:to-red-900 text-white font-semibold px-4 sm:px-6 py-2 sm:py-3 rounded-xl transition-all duration-300 hover:scale-105 shadow-lg shadow-red-500/30 border-0 text-sm sm:text-base";
    }
    
    if (name.includes('–µ–¥–∏–Ω–æ—Ä–æ–≥') || name.includes('unicorn')) {
      return "bg-gradient-to-r from-purple-400 via-pink-500 to-purple-600 hover:from-purple-500 hover:via-pink-600 hover:to-purple-700 text-white font-semibold px-4 sm:px-6 py-2 sm:py-3 rounded-xl transition-all duration-300 hover:scale-105 shadow-lg shadow-purple-500/30 border-0 text-sm sm:text-base";
    }
    
    if (name.includes('–∫–æ—Å–º–æ—Å') || name.includes('space') || name.includes('–≥–∞–ª–∞–∫—Ç–∏–∫–∞') || name.includes('galaxy')) {
      return "bg-gradient-to-r from-indigo-600 via-purple-600 to-indigo-700 hover:from-indigo-700 hover:via-purple-700 hover:to-indigo-800 text-white font-semibold px-4 sm:px-6 py-2 sm:py-3 rounded-xl transition-all duration-300 hover:scale-105 shadow-lg shadow-indigo-500/30 border-0 text-sm sm:text-base";
    }
    
    if (name.includes('–æ–∫–µ–∞–Ω') || name.includes('ocean') || name.includes('–º–æ—Ä–µ') || name.includes('sea')) {
      return "bg-gradient-to-r from-cyan-500 via-blue-600 to-cyan-700 hover:from-cyan-600 hover:via-blue-700 hover:to-cyan-800 text-white font-semibold px-4 sm:px-6 py-2 sm:py-3 rounded-xl transition-all duration-300 hover:scale-105 shadow-lg shadow-cyan-500/30 border-0 text-sm sm:text-base";
    }
    
    if (name.includes('–ª–µ—Å') || name.includes('forest') || name.includes('–ø—Ä–∏—Ä–æ–¥–∞') || name.includes('nature')) {
      return "bg-gradient-to-r from-green-500 via-green-600 to-green-700 hover:from-green-600 hover:via-green-700 hover:to-green-800 text-white font-semibold px-4 sm:px-6 py-2 sm:py-3 rounded-xl transition-all duration-300 hover:scale-105 shadow-lg shadow-green-500/30 border-0 text-sm sm:text-base";
    }
    
    if (name.includes('–æ–≥–æ–Ω—å') || name.includes('fire') || name.includes('–ø–ª–∞–º—è') || name.includes('flame')) {
      return "bg-gradient-to-r from-orange-500 via-red-500 to-orange-600 hover:from-orange-600 hover:via-red-600 hover:to-orange-700 text-white font-semibold px-4 sm:px-6 py-2 sm:py-3 rounded-xl transition-all duration-300 hover:scale-105 shadow-lg shadow-orange-500/30 border-0 text-sm sm:text-base";
    }
    
    if (name.includes('–ª–µ–¥') || name.includes('ice') || name.includes('—Å–Ω–µ–≥') || name.includes('snow')) {
      return "bg-gradient-to-r from-blue-400 via-cyan-500 to-blue-600 hover:from-blue-500 hover:via-cyan-600 hover:to-blue-700 text-white font-semibold px-4 sm:px-6 py-2 sm:py-3 rounded-xl transition-all duration-300 hover:scale-105 shadow-lg shadow-blue-500/30 border-0 text-sm sm:text-base";
    }
    
    if (name.includes('–º–æ–ª–Ω–∏—è') || name.includes('lightning') || name.includes('—ç–ª–µ–∫—Ç—Ä–∏—á–µ—Å—Ç–≤–æ') || name.includes('electric')) {
      return "bg-gradient-to-r from-yellow-400 via-yellow-500 to-yellow-600 hover:from-yellow-500 hover:via-yellow-600 hover:to-yellow-700 text-white font-semibold px-4 sm:px-6 py-2 sm:py-3 rounded-xl transition-all duration-300 hover:scale-105 shadow-lg shadow-yellow-500/30 border-0 text-sm sm:text-base";
    }
    
    // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é - –∑–æ–ª–æ—Ç–∞—è —Ç–µ–º–∞
    return "bg-gradient-to-r from-amber-500 via-yellow-500 to-amber-600 hover:from-amber-600 hover:via-yellow-600 hover:to-amber-700 text-black font-semibold px-4 sm:px-6 py-2 sm:py-3 rounded-xl transition-all duration-300 hover:scale-105 shadow-lg shadow-amber-500/30 border-0 text-sm sm:text-base";
  };

  if (loading) {
    return (
      <div className="min-h-screen bg-gradient-to-br from-gray-900 via-black to-gray-900 text-white">
        <div className="container mx-auto px-4 py-8">
          <div className="flex items-center justify-center h-64">
            <div className="text-center">
              <div className="animate-spin rounded-full h-16 w-16 sm:h-20 sm:w-20 md:h-24 md:w-24 border-4 border-amber-400/30 mx-auto"></div>
              <p className="mt-4 text-lg sm:text-xl text-gray-300">–ó–∞–≥—Ä—É–∑–∫–∞ –∫–µ–π—Å–∞...</p>
            </div>
          </div>
        </div>
      </div>
    );
  }

  if (error || !caseData) {
    return (
      <div className="min-h-screen bg-gradient-to-br from-gray-900 via-black to-gray-900 text-white">
        <div className="container mx-auto px-4 py-8">
          <div className="text-center">
            <h1 className="text-2xl sm:text-3xl font-bold text-red-400 mb-4">{error || '–ö–µ–π—Å –Ω–µ –Ω–∞–π–¥–µ–Ω'}</h1>
            <Button onClick={() => navigate('/cases')} className="bg-amber-600 hover:bg-amber-700 px-6 sm:px-8 py-2 sm:py-3 text-sm sm:text-base">
              <ArrowLeft className="w-4 h-4 mr-2" />
              –í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –∫–µ–π—Å–∞–º
            </Button>
          </div>
        </div>
      </div>
    );
  }

  return (
    <div className="min-h-screen bg-gradient-to-br from-gray-900 via-black to-gray-900 text-white">
      <div className="container mx-auto px-4 py-8">
        {/* –ö–Ω–æ–ø–∫–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞ */}
        <div className="mb-6 mt-16 sm:mt-20 md:mt-24">
          <Button 
            onClick={() => navigate('/cases')} 
            className={caseData ? getCaseTheme(caseData.name) : "bg-gradient-to-r from-amber-500 via-yellow-500 to-amber-600 hover:from-amber-600 hover:via-yellow-600 hover:to-amber-700 text-black font-semibold px-4 sm:px-6 py-2 sm:py-3 rounded-xl transition-all duration-300 hover:scale-105 shadow-lg shadow-amber-500/30 border-0 text-sm sm:text-base"}
          >
            <ArrowLeft className="w-4 h-4 sm:w-5 sm:h-5 mr-2" />
            –í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –∫–µ–π—Å–∞–º
          </Button>
        </div>

        {/* –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–µ–π—Å–µ */}
        <div className="grid grid-cols-1 lg:grid-cols-2 gap-6 sm:gap-8 mb-8 sm:mb-12">
          {/* –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∫–µ–π—Å–∞ */}
          <div className="flex justify-center lg:justify-start">
            <div className="relative">
              <img
                src={caseData.image_url || '/images/placeholder.jpg'}
                alt={caseData.name}
                className="w-full max-w-[300px] sm:max-w-[400px] md:max-w-[500px] h-auto object-contain rounded-xl sm:rounded-2xl shadow-2xl"
                onError={(e) => {
                  console.log('Image failed to load:', caseData.image_url);
                  (e.target as HTMLImageElement).src = '/images/placeholder.jpg';
                }}
              />
            </div>
          </div>

          {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–µ–π—Å–µ */}
          <div className="space-y-4 sm:space-y-6">
            <div>
              <h1 className="text-2xl sm:text-3xl md:text-4xl font-bold text-white mb-2 sm:mb-3">{caseData.name}</h1>
              <Badge variant="outline" className="text-amber-400 border-amber-400 text-sm sm:text-lg px-3 sm:px-4 py-1 sm:py-2">
                {caseData.game}
              </Badge>
            </div>

            {caseData.description && (
              <p className="text-gray-300 text-base sm:text-lg leading-relaxed">
                {caseData.description}
              </p>
            )}

            <div className="flex flex-col sm:flex-row items-start sm:items-center gap-3 sm:gap-4">
              <div className="text-2xl sm:text-3xl font-bold text-amber-400">
                {caseData.price}‚Ç¥
              </div>
              <Badge variant="outline" className="text-green-400 border-green-400 text-sm sm:text-base">
                <Package className="w-4 h-4 mr-2" />
                {caseItems.length} –ø—Ä–µ–¥–º–µ—Ç–æ–≤
              </Badge>
            </div>

            {/* –ö–Ω–æ–ø–∫–∞ –æ—Ç–∫—Ä—ã—Ç–∏—è –∫–µ–π—Å–∞ */}
            <Button
              onClick={handleOpenCase}
              className="w-full sm:w-auto px-6 sm:px-8 py-3 sm:py-4 bg-gradient-to-r from-amber-500 to-yellow-500 hover:from-amber-600 hover:to-yellow-600 text-black font-bold text-lg sm:text-xl rounded-xl transition-all duration-300 hover:scale-105 shadow-xl shadow-amber-500/30"
            >
              <Package className="w-5 h-5 sm:w-6 sm:h-6 mr-2 sm:mr-3" />
              –û—Ç–∫—Ä—ã—Ç—å –∫–µ–π—Å
            </Button>
          </div>
        </div>

        {/* –°–æ–¥–µ—Ä–∂–∏–º–æ–µ –∫–µ–π—Å–∞ */}
        <div className="mb-8">
          <h2 className="text-2xl sm:text-3xl font-bold text-white mb-4 sm:mb-6 text-center">
            –°–æ–¥–µ—Ä–∂–∏–º–æ–µ –∫–µ–π—Å–∞
          </h2>
          
          {caseItems.length > 0 ? (
            <div className="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 xl:grid-cols-5 gap-4 sm:gap-6">
              {caseItems.map((item) => (
                <div key={item.id} className="text-center space-y-2 sm:space-y-3 group">
                  {/* –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø—Ä–µ–¥–º–µ—Ç–∞ */}
                  <div className="relative mx-auto">
                    <img
                      src={item.image_url || '/images/placeholder.jpg'}
                      alt={item.name}
                      className="w-20 h-20 sm:w-24 sm:h-24 md:w-28 md:h-28 object-contain mx-auto transition-transform duration-300 group-hover:scale-110"
                      onError={(e) => {
                        (e.target as HTMLImageElement).src = '/images/placeholder.jpg';
                      }}
                    />
                    {/* –ò–∫–æ–Ω–∫–∞ —Ä–µ–¥–∫–æ—Å—Ç–∏ */}
                    <div className="absolute -top-1 sm:-top-2 -right-1 sm:-right-2">
                      {getRarityIcon(item.rarity)}
                    </div>
                  </div>

                  {/* –ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–µ–¥–º–µ—Ç–∞ */}
                  <div>
                    <h3 className="font-semibold text-white text-sm sm:text-base leading-tight px-2">
                      {item.name}
                    </h3>
                  </div>

                  {/* –†–µ–¥–∫–æ—Å—Ç—å */}
                  <div className={`inline-flex items-center px-2 sm:px-3 py-1 sm:py-1.5 rounded-full text-xs sm:text-sm font-medium ${
                    item.rarity === 'legendary' ? 'bg-yellow-500/20 text-yellow-400 border border-yellow-500/30' :
                    item.rarity === 'epic' ? 'bg-purple-500/20 text-purple-400 border border-purple-500/30' :
                    item.rarity === 'rare' ? 'bg-blue-500/20 text-blue-400 border border-blue-500/30' :
                    'bg-gray-500/20 text-gray-400 border border-gray-500/30'
                  }`}>
                    {getRarityName(item.rarity)}
                  </div>
                </div>
              ))}
            </div>
          ) : (
            <div className="text-center py-8 sm:py-12">
              <Package className="w-16 h-16 sm:w-20 sm:w-24 mx-auto mb-4 text-gray-600" />
              <p className="text-gray-400 text-base sm:text-lg">–í —ç—Ç–æ–º –∫–µ–π—Å–µ –ø–æ–∫–∞ –Ω–µ—Ç –ø—Ä–µ–¥–º–µ—Ç–æ–≤</p>
            </div>
          )}
        </div>
      </div>

      {/* –†—É–ª–µ—Ç–∫–∞ –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è –∫–µ–π—Å–∞ */}
      {showRoulette && caseData && (
        <CaseRoulette
          caseItems={caseItems}
          casePrice={caseData.price}
          caseName={caseData.name}
          telegramId={profile?.telegram_id || 0}
          onClose={() => setShowRoulette(false)}
          onCaseOpened={handleCaseOpened}
        />
      )}
    </div>
  );
};

export default CasePage;