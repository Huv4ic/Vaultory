import { useState } from 'react';
import { Link, useNavigate } from 'react-router-dom';
import ProductCard from '@/components/ProductCard';
import { Button } from '@/components/ui/button';
import { Input } from '@/components/ui/input';
import { Accordion, AccordionContent, AccordionItem, AccordionTrigger } from '@/components/ui/accordion';
import { CheckCircle, ChevronDown, Crown, Sparkles, Zap, Star, Search, Target } from 'lucide-react';
import { useAuth } from '@/hooks/useAuth';
import { useLanguage } from '@/hooks/useLanguage';
import { useProducts, Product } from '@/hooks/useProducts';
import { useCart } from '@/hooks/useCart';
import { useNotification } from '../hooks/useNotification';
import Notification from '../components/ui/Notification';
import { useTranslations } from '@/hooks/useTranslations';
import TelegramStats from '@/components/TelegramStats';

const Index = () => {
  const [selectedCategory, setSelectedCategory] = useState('all');
  const [searchQuery, setSearchQuery] = useState('');
  const [sortBy, setSortBy] = useState('popular');
  const navigate = useNavigate();
  const { telegramUser } = useAuth();
  const { t } = useLanguage();
  const { products, categories, loading, error } = useProducts();
  const { items, addItem } = useCart();
  const { showError, notification, hideNotification } = useNotification();
  const { getCategoryTranslation } = useTranslations();

  // –£–±–∏—Ä–∞–µ–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è - –±–∞–ª–∞–Ω—Å –Ω–µ –¥–æ–ª–∂–µ–Ω –æ–±–Ω–æ–≤–ª—è—Ç—å—Å—è –ø—Ä–æ—Å—Ç–æ –ø—Ä–∏ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
  // useEffect(() => {
  //   if (telegramUser) {
  //     refreshTelegramProfile();
  //   }
  // }, [telegramUser, refreshTelegramProfile]);

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —ç–º–æ–¥–∑–∏ –∏–∫–æ–Ω–∫–∏ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é
  const getCategoryIcon = (categoryName: string) => {
    const iconMap: { [key: string]: string } = {
      'currency': 'üí∞',
      'accounts': 'üë§',
      'keys': 'üîë',
      'subscriptions': 'üì±',
      'skins': 'üé®',
      'weapons': 'üî´',
      'characters': 'üë§',
      'vehicles': 'üöó',
      'default': 'üì¶'
    };
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ—á–Ω–æ–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ
    if (iconMap[categoryName.toLowerCase()]) {
      return iconMap[categoryName.toLowerCase()];
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á–∞—Å—Ç–∏—á–Ω–æ–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ
    const lowerName = categoryName.toLowerCase();
    if (lowerName.includes('–∞–∫–∫–∞—É–Ω—Ç') || lowerName.includes('account')) return 'üë§';
    if (lowerName.includes('–≤–∞–ª—é—Ç–∞') || lowerName.includes('currency')) return 'üí∞';
    if (lowerName.includes('–∫–ª—é—á') || lowerName.includes('key')) return 'üîë';
    if (lowerName.includes('–ø–æ–¥–ø–∏—Å–∫') || lowerName.includes('subscription')) return 'üì±';
    if (lowerName.includes('—Å–∫–∏–Ω') || lowerName.includes('skin')) return 'üé®';
    
    return iconMap['default'];
  };

  // –°–æ–∑–¥–∞–µ–º gameCategories –∏–∑ –¥–∞–Ω–Ω—ã—Ö –ë–î —Å –ø–µ—Ä–µ–≤–æ–¥–∞–º–∏
  const gameCategories = categories.map(cat => ({
    id: cat.id,
    name: getCategoryTranslation(cat.id, cat.name),
    image: cat.image
  }));

  // –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –∏ –ø–æ–∏—Å–∫ —Ç–æ–≤–∞—Ä–æ–≤
  let filteredProducts = products;

  // –§–∏–ª—å—Ç—Ä –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
  if (selectedCategory !== 'all') {
    filteredProducts = filteredProducts.filter(product => {
      const productCategory = categories.find(cat => cat.id === product.category_id);
      return productCategory && productCategory.id === selectedCategory;
    });
  }

  // –ü–æ–∏—Å–∫ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é
  if (searchQuery.trim()) {
    filteredProducts = filteredProducts.filter(product =>
      product.name.toLowerCase().includes(searchQuery.toLowerCase())
    );
  }

  // –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞
  switch (sortBy) {
    case 'price_asc':
      filteredProducts = filteredProducts.sort((a, b) => a.price - b.price);
      break;
    case 'price_desc':
      filteredProducts = filteredProducts.sort((a, b) => b.price - a.price);
      break;
    case 'newest':
      filteredProducts = filteredProducts.sort((a, b) => new Date(b.created_at || 0).getTime() - new Date(a.created_at || 0).getTime());
      break;
    case 'popular':
    default:
      // –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –ø–æ —Ä–µ–π—Ç–∏–Ω–≥—É (–µ—Å–ª–∏ –µ—Å—Ç—å) –∏–ª–∏ –ø–æ –ø–æ–ø—É–ª—è—Ä–Ω–æ—Å—Ç–∏
      filteredProducts = filteredProducts.sort((a, b) => (b.rating || 0) - (a.rating || 0));
      break;
  }

  // –ì—Ä—É–ø–ø–∏—Ä—É–µ–º —Ç–æ–≤–∞—Ä—ã –ø–æ –∏–≥—Ä–∞–º - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—Å–µ —Å—Ä–∞–∑—É
  const groupedProducts = filteredProducts.reduce((groups, product) => {
    const game = product.game || '–¢–æ–≤–∞—Ä—ã'; // –ï—Å–ª–∏ –Ω–µ—Ç –∏–≥—Ä—ã, –æ—Ç–Ω–æ—Å–∏–º –∫ "–¢–æ–≤–∞—Ä—ã"
    if (!groups[game]) {
      groups[game] = [];
    }
    groups[game].push(product);
    return groups;
  }, {} as Record<string, Product[]>);

  const faqItems = [
    { 
      question: t('–ö–∞–∫ –±—ã—Å—Ç—Ä–æ –ø—Ä–∏—Ö–æ–¥—è—Ç —Ç–æ–≤–∞—Ä—ã?'), 
      answer: '–¢–æ–≤–∞—Ä—ã –ø–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã –≤—ã–¥–∞—é—Ç—Å—è –≤—Ä—É—á–Ω—É—é, –ø–æ—ç—Ç–æ–º—É –≤—Ä–µ–º—è –Ω–∞ –≤—ã–¥–∞—á—É —Ç–æ–≤–∞—Ä–∞ –º–æ–∂–µ—Ç –≤–∞—Ä—å–∏—Ä–æ–≤–∞—Ç—å—Å—è –æ—Ç 5 –º–∏–Ω—É—Ç –¥–æ –ø–∞—Ä—ã —á–∞—Å–æ–≤.' 
    },
    { 
      question: t('–ö–∞–∫–∏–µ —Å–ø–æ—Å–æ–±—ã –æ–ø–ª–∞—Ç—ã –¥–æ—Å—Ç—É–ø–Ω—ã?'), 
      answer: '–î–æ—Å—Ç—É–ø–Ω—ã –æ–ø–ª–∞—Ç—ã —á–µ—Ä–µ–∑ Monobank, PrivatBank, PUMB, –∞ —Ç–∞–∫–∂–µ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–æ–π (USDT TRC20/ERC20, Litecoin)' 
    },
    { 
      question: t('–ë–µ–∑–æ–ø–∞—Å–Ω–æ –ª–∏ –ø–æ–∫—É–ø–∞—Ç—å —É –≤–∞—Å?'), 
      answer: '–î–∞, –º—ã —Ä–∞–±–æ—Ç–∞–µ–º —Å 2025 –≥–æ–¥–∞ –∏ –∏–º–µ–µ–º —É–∂–µ –±–æ–ª—å—à–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–µ–∞–ª—å–Ω—ã—Ö –æ—Ç–∑—ã–≤–æ–≤. –í—Å–µ –ø–ª–∞—Ç–µ–∂–∏ –ø—Ä–æ—Ö–æ–¥—è—Ç —á–µ—Ä–µ–∑ –∑–∞—â–∏—â–µ–Ω–Ω—ã–µ –∫–∞–Ω–∞–ª—ã.' 
    },
    { 
      question: t('–ß—Ç–æ –¥–µ–ª–∞—Ç—å –µ—Å–ª–∏ —Ç–æ–≤–∞—Ä –Ω–µ –ø—Ä–∏—à–µ–ª?'), 
      answer: t('–û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –Ω–∞—à—É –ø–æ–¥–¥–µ—Ä–∂–∫—É —á–µ—Ä–µ–∑ Telegram –∏–ª–∏ Email —Å –Ω–æ–º–µ—Ä–æ–º –∑–∞–∫–∞–∑–∞. –ú—ã —Ä–µ—à–∏–º –ø—Ä–æ–±–ª–µ–º—É –≤ —Ç–µ—á–µ–Ω–∏–µ —á–∞—Å–∞ –∏–ª–∏ –≤–µ—Ä–Ω–µ–º –¥–µ–Ω—å–≥–∏.') 
    }
  ];

  const handleProductDetails = (productId) => {
    navigate(`/product/${productId}`);
  };

  const handleAddToCart = (product) => {
    if (!telegramUser) {
      showError(t('–í–æ–π–¥–∏—Ç–µ —á–µ—Ä–µ–∑ Telegram, —á—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å –≤ –∫–æ—Ä–∑–∏–Ω—É!'));
      return;
    }
    addItem(product);
  };

  const handleBuyNow = (product) => {
    if (!telegramUser) {
      showError(t('–í–æ–π–¥–∏—Ç–µ —á–µ—Ä–µ–∑ Telegram –¥–ª—è –ø–æ–∫—É–ø–∫–∏!'));
      return;
    }
    // –î–æ–±–∞–≤–ª—è–µ–º —Ç–æ–≤–∞—Ä –≤ –∫–æ—Ä–∑–∏–Ω—É
    addItem(product);
    // –°—Ä–∞–∑—É –ø–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –∫–æ—Ä–∑–∏–Ω—É
    navigate('/cart');
  };

  if (loading) {
    return (
      <div className="min-h-screen bg-[#0e0e0e] text-[#f0f0f0] flex items-center justify-center">
        <div className="text-center">
          <div className="animate-spin rounded-full h-32 w-32 border-b-2 border-[#a31212] mx-auto"></div>
          <p className="mt-4 text-xl">{t('–ó–∞–≥—Ä—É–∑–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤...')}</p>
        </div>
      </div>
    );
  }

  if (error) {
    return (
      <div className="min-h-screen bg-[#0e0e0e] text-[#f0f0f0] flex items-center justify-center">
        <div className="text-center">
          <h1 className="text-4xl font-bold mb-4 text-[#a31212]">{t('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏')}</h1>
          <p className="text-xl mb-4">{error}</p>
          <Button onClick={() => window.location.reload()} className="bg-[#a31212] hover:bg-[#8a0f0f]">
            {t('–ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞')}
          </Button>
        </div>
      </div>
    );
  }

  return (
    <div className="min-h-screen bg-[#0e0e0e] text-[#f0f0f0] relative">
      {/* Telegram –∫–∞–Ω–∞–ª - —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–µ –æ–∫–Ω–æ —Å –∞–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω—ã–º —Ñ–æ–Ω–æ–º */}


      {/* –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏–≥—Ä */}
      <section id="products" className="py-16 px-4 relative bg-[#0e0e0e]">
        
        <div className="container mx-auto relative z-10">
          {/* Hero —Å–µ–∫—Ü–∏—è */}
          <div className="text-center mb-12 sm:mb-16">
            <div className="flex justify-center mb-6">
              <div className="relative">
                <Crown className="w-16 h-16 sm:w-20 sm:h-20 text-[#a31212]" />
              </div>
            </div>
            <h2 className="text-3xl sm:text-4xl md:text-5xl lg:text-6xl font-black text-center mb-6 text-[#f0f0f0] px-2">
              {t('–ü–æ–ø—É–ª—è—Ä–Ω—ã–µ –∏–≥—Ä—ã')}
            </h2>
            <div className="flex justify-center items-center space-x-4 mb-8">
              <div className="h-px bg-[#1c1c1c] w-24"></div>
              <Sparkles className="w-6 h-6 text-[#a31212]" />
              <div className="h-px bg-[#1c1c1c] w-24"></div>
            </div>
          </div>
          
          {/* –ü–æ–∏—Å–∫ –∏ —Ñ–∏–ª—å—Ç—Ä—ã */}
          <div className="max-w-4xl mx-auto mb-12 sm:mb-16">
            <div className="space-y-6">
              {/* –ü–æ–∏—Å–∫ */}
              <div className="group relative">
                <div className="relative">
                  <Search className="absolute left-4 top-1/2 transform -translate-y-1/2 w-5 h-5 text-[#a31212]" />
                  <Input
                    type="text"
                    placeholder="–ü–æ–∏—Å–∫ —Ç–æ–≤–∞—Ä–æ–≤..."
                    value={searchQuery}
                    onChange={(e) => setSearchQuery(e.target.value)}
                    className="w-full pl-12 pr-4 py-4 bg-[#181818] border border-[#1c1c1c] text-[#f0f0f0] placeholder-[#a0a0a0] rounded-2xl focus:border-[#a31212] focus:ring-2 focus:ring-[#a31212]/20 transition-all duration-300 text-lg hover:border-[#a31212]/50"
                  />
                </div>
              </div>

              {/* –§–∏–ª—å—Ç—Ä—ã */}
              <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                {/* –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ */}
                <div className="group relative">
                  <div className="relative">
                    <select
                      value={selectedCategory}
                      onChange={(e) => setSelectedCategory(e.target.value)}
                      className="w-full px-4 py-4 bg-[#181818] border border-[#1c1c1c] text-[#f0f0f0] rounded-2xl focus:border-[#a31212] focus:ring-2 focus:ring-[#a31212]/20 transition-all duration-300 text-lg hover:border-[#a31212]/50"
                    >
                      <option value="all">–í—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏</option>
                      {gameCategories.map((category) => (
                        <option key={category.id} value={category.id}>
                          {category.name}
                        </option>
                      ))}
                    </select>
                  </div>
                </div>

                {/* –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ */}
                <div className="group relative">
                  <div className="relative">
                    <select
                      value={sortBy}
                      onChange={(e) => setSortBy(e.target.value)}
                      className="w-full px-4 py-4 bg-[#181818] border border-[#1c1c1c] text-[#f0f0f0] rounded-2xl focus:border-[#a31212] focus:ring-2 focus:ring-[#a31212]/20 transition-all duration-300 text-lg hover:border-[#a31212]/50"
                    >
                      <option value="popular">–ü–æ –ø–æ–ø—É–ª—è—Ä–Ω–æ—Å—Ç–∏</option>
                      <option value="price_asc">–ü–æ —Ü–µ–Ω–µ (–≤–æ–∑—Ä–∞—Å—Ç–∞–Ω–∏–µ)</option>
                      <option value="price_desc">–ü–æ —Ü–µ–Ω–µ (—É–±—ã–≤–∞–Ω–∏–µ)</option>
                      <option value="newest">–ü–æ –¥–∞—Ç–µ</option>
                    </select>
                  </div>
                </div>
              </div>
            </div>
          </div>

          {/* –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞ */}
          {searchQuery.trim() && (
            <div className="mb-8 text-center">
              <div className="inline-flex items-center gap-3 px-6 py-3 bg-[#181818] rounded-2xl border border-[#1c1c1c]">
                <Target className="w-5 h-5 text-[#a31212]" />
                <p className="text-[#f0f0f0] text-lg">
                  –ù–∞–π–¥–µ–Ω–æ —Ç–æ–≤–∞—Ä–æ–≤: <span className="text-[#f0f0f0] font-black text-xl">{filteredProducts.length}</span>
                </p>
              </div>
            </div>
          )}


          {/* –¢–æ–≤–∞—Ä—ã –ø–æ –∏–≥—Ä–∞–º */}
          <div className="space-y-16 sm:space-y-20">
            {Object.entries(groupedProducts).map(([gameName, gameProducts], gameIndex) => (
              <div key={gameName} className="animate-fade-in" style={{animationDelay: `${gameIndex * 0.2}s`}}>
                {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ –∏–≥—Ä—ã */}
                <div className="mb-8 sm:mb-12 relative">
                  <div className="flex items-center justify-center md:justify-start mb-6 sm:mb-8">
                    <div className="relative group">
                      <Star className="w-6 h-6 sm:w-8 sm:h-8 text-[#a31212] absolute -left-8 sm:-left-10 top-1/2 transform -translate-y-1/2" />
                      <h3 className="text-2xl sm:text-3xl md:text-4xl lg:text-5xl font-black text-[#f0f0f0] tracking-wide text-center md:text-left px-2">
                        {gameName.toUpperCase()}
                      </h3>
                    </div>
                  </div>
                  {/* –î–µ–∫–æ—Ä–∞—Ç–∏–≤–Ω–∞—è –ª–∏–Ω–∏—è */}
                  <div className="flex items-center justify-center md:justify-start">
                    <div className="h-1 bg-[#a31212] w-16 sm:w-24 rounded-full"></div>
                    <div className="h-px bg-[#1c1c1c] w-20 sm:w-32 ml-4 rounded-full"></div>
                    <div className="h-1 bg-[#a31212] w-16 sm:w-24 ml-4 rounded-full"></div>
                  </div>
                </div>
                
                {/* –¢–æ–≤–∞—Ä—ã —ç—Ç–æ–π –∏–≥—Ä—ã */}
                <div className="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 xl:grid-cols-5 gap-6 sm:gap-8">
                  {gameProducts.map((product, index) => (
                    <div 
                      key={product.id} 
                      className="animate-fade-in group"
                      style={{animationDelay: `${(gameIndex * 5 + index) * 0.1}s`}}
                    >
                      <div className="relative">
                        <ProductCard
                          id={product.id}
                          name={product.name}
                          price={product.price}
                          original_price={product.original_price}
                          images={product.images}
                          image_url={product.image_url}
                          category_id={product.category_id}
                          game={product.game}
                          rating={product.rating}
                          description={product.description}
                          isInCart={items.some((item) => item.id === product.id)}
                          onAddToCart={() => handleAddToCart(product)}
                          onDetails={() => handleProductDetails(product.id)}
                          onBuyNow={() => handleBuyNow(product)}
                        />
                        {/* –°–≤–µ—Ç—è—â–∏–π—Å—è —ç—Ñ—Ñ–µ–∫—Ç –≤–æ–∫—Ä—É–≥ –∫–∞—Ä—Ç–æ—á–∫–∏ */}
                        <div className="absolute inset-0 bg-gradient-to-r from-cyan-500/5 via-purple-500/5 to-pink-500/5 rounded-xl blur-xl group-hover:blur-2xl transition-all duration-300 opacity-0 group-hover:opacity-100 pointer-events-none"></div>
                      </div>
                    </div>
                  ))}
                </div>
              </div>
            ))}
          </div>
        </div>
      </section>

      {/* FAQ —Å –Ω–æ–≤—ã–º –¥–∏–∑–∞–π–Ω–æ–º */}
      <section className="py-16 px-4 bg-transparent relative">
        <div className="container mx-auto max-w-4xl relative z-10">
          <div className="text-center mb-12 sm:mb-16">
            <div className="flex justify-center mb-6">
              <div className="relative">
                <Sparkles className="w-12 h-12 sm:w-16 sm:h-16 text-[#a31212]" />
              </div>
            </div>
            <h2 className="text-3xl sm:text-4xl md:text-5xl font-black text-center mb-6 text-[#f0f0f0]">
              {t('–ß–∞—Å—Ç—ã–µ –≤–æ–ø—Ä–æ—Å—ã')}
            </h2>
            <div className="flex justify-center items-center space-x-4">
              <div className="h-px bg-[#1c1c1c] w-24"></div>
              <Star className="w-6 h-6 text-[#a31212]" />
              <div className="h-px bg-[#1c1c1c] w-24"></div>
            </div>
          </div>
          
          <Accordion type="single" collapsible className="space-y-6">
            {faqItems.map((item, index) => (
              <AccordionItem 
                key={index} 
                value={`item-${index}`} 
                className="group bg-[#181818] rounded-2xl border border-[#1c1c1c] px-6 sm:px-8 hover:border-[#a31212] transition-all duration-300"
              >
                <AccordionTrigger className="text-lg sm:text-xl font-bold text-[#f0f0f0] hover:text-[#a31212] transition-colors py-6 sm:py-8 hover:no-underline">
                  <div className="flex items-center">
                    <CheckCircle className="w-6 h-6 text-[#a31212] mr-4" />
                    {item.question}
                  </div>
                </AccordionTrigger>
                <AccordionContent className="text-[#f0f0f0] pb-6 sm:pb-8 text-base sm:text-lg leading-relaxed">
                  {item.answer}
                </AccordionContent>
              </AccordionItem>
            ))}
          </Accordion>
        </div>
      </section>
      
      {/* –ö—Ä–∞—Å–∏–≤—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è */}
      <Notification
        show={notification.show}
        message={notification.message}
        type={notification.type}
        onClose={hideNotification}
        autoHide={notification.autoHide}
        duration={notification.duration}
      />
    </div>
  );
};

export default Index;
