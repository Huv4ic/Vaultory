import React, { useState, useEffect, useRef } from 'react';
import { Button } from '@/components/ui/button';
import { Package, X, Gift, DollarSign } from 'lucide-react';
import { supabase } from '../integrations/supabase/client';
import { useNotification } from '../hooks/useNotification';
import { useGlobalCaseCounter } from '../hooks/useGlobalCaseCounter';
import { useAuth } from '../hooks/useAuth';
import Notification from './ui/Notification';

// CSS —Å—Ç–∏–ª–∏ –¥–ª—è –∞–Ω–∏–º–∞—Ü–∏–π —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
const notificationStyles = `
  @keyframes slideInFromRight {
    from {
      transform: translateX(100%);
      opacity: 0;
    }
    to {
      transform: translateX(0);
      opacity: 1;
    }
  }
  
  .animate-in.slide-in-from-right-2 {
    animation: slideInFromRight 0.3s ease-out;
  }
`;

interface CaseItem {
  id: string;
  name: string;
  rarity: string;
  image_url?: string;
  drop_after_cases?: number;
  price?: number; // –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª–µ –¥–ª—è —Ü–µ–Ω—ã
}

interface CaseRouletteProps {
  caseItems: CaseItem[];
  casePrice: number;
  caseName: string; // –î–æ–±–∞–≤–ª—è–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–µ–π—Å–∞
  telegramId: number; // –î–æ–±–∞–≤–ª—è–µ–º telegram_id –¥–ª—è –ø—Ä–æ–¥–∞–∂–∏
  onClose: () => void;
  onCaseOpened: (item: CaseItem, action: 'add' | 'sell') => void; // –î–æ–±–∞–≤–ª—è–µ–º —Ç–∏–ø –¥–µ–π—Å—Ç–≤–∏—è
}

const CaseRoulette: React.FC<CaseRouletteProps> = ({ 
  caseItems, 
  casePrice, 
  caseName, // –î–æ–±–∞–≤–ª—è–µ–º –≤ –¥–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏–∑–∞—Ü–∏—é
  telegramId, // –î–æ–±–∞–≤–ª—è–µ–º –≤ –¥–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏–∑–∞—Ü–∏—é
  onClose, 
  onCaseOpened 
}) => {
  const [isSpinning, setIsSpinning] = useState(false);
  const [winnerItem, setWinnerItem] = useState<CaseItem | null>(null);
  const [soldOrAdded, setSoldOrAdded] = useState(false);
  const [showResult, setShowResult] = useState(false);
  const stripRef = useRef<HTMLDivElement>(null);
  const [spinCount, setSpinCount] = useState(0);
  const animationRef = useRef<number | null>(null);
  
  // –ò—Å–ø–æ–ª—å–∑—É–µ–º –Ω–æ–≤—ã–π —Ö—É–∫ –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
  const { showSuccess, showError, showWarning, showInfo, notification, hideNotification } = useNotification();
  const { totalCasesOpened, incrementGlobalCounter } = useGlobalCaseCounter();
  const { profile, refreshProfile } = useAuth();

  // –û—Ç–ª–∞–¥–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–π —Å–æ—Å—Ç–æ—è–Ω–∏–π
  useEffect(() => {
    console.log('State changed - isSpinning:', isSpinning, 'showResult:', showResult);
    
    // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞: –µ—Å–ª–∏ showResult —Å—Ç–∞–ª false, —Å–±—Ä–∞—Å—ã–≤–∞–µ–º winnerItem
    if (!showResult && winnerItem) {
      console.log('showResult became false, resetting winnerItem');
      setWinnerItem(null);
    }
  }, [isSpinning, showResult, winnerItem]);

  // –û—Ç–ª–∞–¥–∫–∞ –≤—Å–µ—Ö –∏–∑–º–µ–Ω–µ–Ω–∏–π —Å–æ—Å—Ç–æ—è–Ω–∏–π
  useEffect(() => {
    console.log('=== STATE CHANGE DEBUG ===');
    console.log('isSpinning:', isSpinning);
    console.log('showResult:', showResult);
    console.log('winnerItem:', winnerItem ? winnerItem.name : 'null');
    console.log('animationRef.current:', animationRef.current);
    console.log('========================');
  }, [isSpinning, showResult, winnerItem, animationRef.current]);

  // –û—Ç–ª–∞–¥–∫–∞ –≤—ã–∑–æ–≤–æ–≤ onClose
  useEffect(() => {
    console.log('=== COMPONENT MOUNTED ===');
    return () => {
      console.log('=== COMPONENT UNMOUNTING ===');
      console.log('Final state - isSpinning:', isSpinning, 'showResult:', showResult, 'winnerItem:', winnerItem);
    };
  }, []);

  // –û—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º –≤—Å–µ –≤—ã–∑–æ–≤—ã onClose
  const handleClose = () => {
    console.log('=== ONCLOSE CALLED ===');
    console.log('Stack trace:', new Error().stack);
    console.log('Current state - isSpinning:', isSpinning, 'showResult:', showResult, 'winnerItem:', winnerItem);
    console.log('Component props:', { caseItems: caseItems.length, casePrice, onClose: typeof onClose, onCaseOpened: typeof onCaseOpened });
    console.log('soldOrAdded:', soldOrAdded);
    
    // –ï—Å–ª–∏ –µ—Å—Ç—å –≤—ã–∏–≥—Ä—ã—à–Ω—ã–π –ø—Ä–µ–¥–º–µ—Ç –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∏—á–µ–≥–æ –Ω–µ –≤—ã–±—Ä–∞–ª - –¥–æ–±–∞–≤–ª—è–µ–º –≤ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å
    if (winnerItem && !soldOrAdded) {
      console.log('üéÅ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–∫—Ä—ã–ª –æ–∫–Ω–æ –±–µ–∑ –≤—ã–±–æ—Ä–∞ - –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –¥–æ–±–∞–≤–ª—è–µ–º –ø—Ä–µ–¥–º–µ—Ç –≤ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å:', winnerItem.name);
      onCaseOpened(winnerItem, 'add');
    }
    
    // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–∏ –∑–∞–∫—Ä—ã—Ç–∏–∏
    setSoldOrAdded(false);
    setShowResult(false);
    setWinnerItem(null);
    setIsSpinning(false);
    setRouletteItems([]); // –û—á–∏—â–∞–µ–º —Ä—É–ª–µ—Ç–∫—É
    
    // –û—á–∏—â–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é
    if (animationRef.current) {
      cancelAnimationFrame(animationRef.current);
      animationRef.current = null;
    }
    
    onClose();
  };

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∫–∞–∑–∞ –∫—Ä–∞—Å–∏–≤—ã—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
  const showNotification = (message: string, type: 'success' | 'info' | 'warning' | 'error' = 'success') => {
    if (type === 'success') {
      showSuccess(message);
    } else if (type === 'error') {
      showError(message);
    } else if (type === 'warning') {
      showWarning(message);
    } else {
      showInfo(message);
    }
  };

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–¥–∞–∂–∏ –ø—Ä–µ–¥–º–µ—Ç–∞ —Å—Ä–∞–∑—É –ø–æ—Å–ª–µ –æ—Ç–∫—Ä—ã—Ç–∏—è –∫–µ–π—Å–∞
  const handleImmediateSell = async (item: CaseItem) => {
    try {
      console.log('üí∞ –ü—Ä–æ–¥–∞–µ–º –ø—Ä–µ–¥–º–µ—Ç —Å—Ä–∞–∑—É –ø–æ—Å–ª–µ –æ—Ç–∫—Ä—ã—Ç–∏—è –∫–µ–π—Å–∞:', item);
      console.log('üíµ –¶–µ–Ω–∞ –ø—Ä–µ–¥–º–µ—Ç–∞:', item.price);
      
      const { data: currentProfile, error: fetchBalanceError } = await supabase
        .from('profiles')
        .select('balance')
        .eq('telegram_id', telegramId)
        .single();
  
      if (fetchBalanceError || !currentProfile) {
        console.error('‚ùå Error fetching current balance:', fetchBalanceError);
        showError('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –±–∞–ª–∞–Ω—Å–∞!');
        return;
      }
  
      const newBalance = (currentProfile.balance || 0) + (item.price || 0);
      console.log('üí∞ –û–±–Ω–æ–≤–ª—è–µ–º –±–∞–ª–∞–Ω—Å:', { old: currentProfile.balance, new: newBalance });
  
      const { error: balanceError } = await supabase
        .from('profiles')
        .update({ 
          balance: newBalance 
        })
        .eq('telegram_id', telegramId);
  
      if (balanceError) {
        console.error('‚ùå Error updating balance:', balanceError);
        showError('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –±–∞–ª–∞–Ω—Å–∞!');
        return;
      }
  
      // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø—Ä–æ–¥–∞–Ω–Ω—ã—Ö –ø—Ä–µ–¥–º–µ—Ç–æ–≤
      const { error: statsError } = await supabase.rpc('increment_user_items_sold', {
        user_telegram_id: telegramId
      });

      if (statsError) {
        console.error('‚ùå Error updating items sold stats:', statsError);
      } else {
        console.log('‚úÖ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø—Ä–æ–¥–∞–Ω–Ω—ã—Ö –ø—Ä–µ–¥–º–µ—Ç–æ–≤ –æ–±–Ω–æ–≤–ª–µ–Ω–∞');
      }

      console.log('‚úÖ –ë–∞–ª–∞–Ω—Å —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω');
      showSuccess(`–ü—Ä–µ–¥–º–µ—Ç "${item.name}" –ø—Ä–æ–¥–∞–Ω –∑–∞ ${item.price || 0}‚Ç¥! –î–µ–Ω—å–≥–∏ –¥–æ–±–∞–≤–ª–µ–Ω—ã –Ω–∞ –±–∞–ª–∞–Ω—Å.`);
      
      // –ó–∞–∫—Ä—ã–≤–∞–µ–º –æ–∫–Ω–æ —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–π –ø—Ä–æ–¥–∞–∂–∏
      setTimeout(() => {
        handleClose();
      }, 2000); // –î–∞–µ–º –≤—Ä–µ–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —É–≤–∏–¥–µ—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
      
    } catch (error) {
      console.error('‚ùå Failed to sell item immediately:', error);
      showError('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–¥–∞–∂–µ –ø—Ä–µ–¥–º–µ—Ç–∞!');
    }
  };

  const handleConfirmSell = async () => {
    if (winnerItem) {
      await handleImmediateSell(winnerItem);
      setSoldOrAdded(true);
      handleClose();
    }
  };

  const handleCancelSell = () => {
    // setShowConfirmSell(false); // –£–¥–∞–ª–µ–Ω–æ
    // setItemToSell(null); // –£–¥–∞–ª–µ–Ω–æ
  };

  // Cleanup –∞–Ω–∏–º–∞—Ü–∏–∏ –ø—Ä–∏ —Ä–∞–∑–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Å–æ—Å—Ç–æ—è–Ω–∏–π
  useEffect(() => {
    return () => {
      if (animationRef.current) {
        console.log('Cleanup: cancelling animation on unmount');
        cancelAnimationFrame(animationRef.current);
        animationRef.current = null;
      }
    };
  }, []);
  
  // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Å–æ—Å—Ç–æ—è–Ω–∏–π
  useEffect(() => {
    if (!isSpinning && animationRef.current) {
      console.log('Cleanup: cancelling animation when spinning stops');
      cancelAnimationFrame(animationRef.current);
      animationRef.current = null;
    }
  }, [isSpinning]);

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –ø–æ–±–µ–¥–Ω–æ–≥–æ –ø—Ä–µ–¥–º–µ—Ç–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ drop_after_cases
  const calculateWinner = (): CaseItem => {
    // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–π —Å—á–µ—Ç—á–∏–∫ –æ—Ç–∫—Ä—ã—Ç—ã—Ö –∫–µ–π—Å–æ–≤ (–ë–ï–ó +1)
    const currentCaseCount = totalCasesOpened;
    const nextCaseNumber = currentCaseCount + 1;
    
    console.log('=== CALCULATE WINNER START ===');
    console.log('Current case count from DB:', currentCaseCount);
    console.log('Next case number:', nextCaseNumber);
    console.log('All case items:', caseItems.map(item => ({ name: item.name, drop_after_cases: item.drop_after_cases })));
    
    // –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –ø—Ä–µ–¥–º–µ—Ç—ã –ø–æ drop_after_cases
    const itemsByDropRate: { [key: number]: CaseItem[] } = {};
    
    caseItems.forEach(item => {
      const dropRate = item.drop_after_cases || 1;
      if (!itemsByDropRate[dropRate]) {
        itemsByDropRate[dropRate] = [];
      }
      itemsByDropRate[dropRate].push(item);
    });
    
    console.log('Items grouped by drop rate:', itemsByDropRate);
    
    // –ù–∞—Ö–æ–¥–∏–º –ø–æ–¥—Ö–æ–¥—è—â–∏–µ –ø—Ä–µ–¥–º–µ—Ç—ã –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ –∫–µ–π—Å–∞
    let eligibleItems: CaseItem[] = [];
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥—ã–π drop_after_cases
    Object.keys(itemsByDropRate).forEach(dropRateStr => {
      const dropRate = parseInt(dropRateStr);
      
      // –ü–†–ê–í–ò–õ–¨–ù–ê–Ø –õ–û–ì–ò–ö–ê: –ø—Ä–µ–¥–º–µ—Ç –≤—ã–ø–∞–¥–∞–µ—Ç –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∏ —á–µ—Ä–µ–∑ –∫–∞–∂–¥—ã–µ N –∫–µ–π—Å–æ–≤
      // –ù–∞–ø—Ä–∏–º–µ—Ä: drop_after_cases = 100 –æ–∑–Ω–∞—á–∞–µ—Ç –≤—ã–ø–∞–¥–µ–Ω–∏–µ –Ω–∞ 100-–º, 200-–º, 300-–º –∫–µ–π—Å–µ
      // drop_after_cases = 1000 –æ–∑–Ω–∞—á–∞–µ—Ç –≤—ã–ø–∞–¥–µ–Ω–∏–µ –Ω–∞ 1000-–º, 2000-–º, 3000-–º –∫–µ–π—Å–µ
      const isEligible = dropRate > 0 && (nextCaseNumber % dropRate === 0);
      
      console.log(`Checking drop rate ${dropRate}: next case ${nextCaseNumber} % ${dropRate} = ${nextCaseNumber % dropRate}, eligible: ${isEligible}`);
      
      if (isEligible) {
        // –ï—Å–ª–∏ —Ç–µ–∫—É—â–∏–π –∫–µ–π—Å –∫—Ä–∞—Ç–µ–Ω drop_after_cases, –¥–æ–±–∞–≤–ª—è–µ–º –≤—Å–µ –ø—Ä–µ–¥–º–µ—Ç—ã —Å —ç—Ç–∏–º –∑–Ω–∞—á–µ–Ω–∏–µ–º
        eligibleItems = eligibleItems.concat(itemsByDropRate[dropRate]);
        console.log(`‚úÖ Added items with drop rate ${dropRate}:`, itemsByDropRate[dropRate].map(item => item.name));
      } else {
        console.log(`‚ùå Case ${nextCaseNumber} is not eligible for drop rate ${dropRate}`);
      }
    });
    
    console.log('Final eligible items:', eligibleItems.map(item => ({ name: item.name, drop_after_cases: item.drop_after_cases })));
    
    // –ï—Å–ª–∏ –Ω–µ—Ç –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö –ø—Ä–µ–¥–º–µ—Ç–æ–≤, –±–µ—Ä–µ–º –ø—Ä–µ–¥–º–µ—Ç—ã —Å drop_after_cases = 1 (–±–∞–∑–æ–≤—ã–µ –ø—Ä–µ–¥–º–µ—Ç—ã)
    if (eligibleItems.length === 0) {
      console.log('‚ö†Ô∏è No eligible items found for case', nextCaseNumber, ', looking for items with drop_after_cases = 1');
      
      // –ò—â–µ–º –ø—Ä–µ–¥–º–µ—Ç—ã —Å drop_after_cases = 1 (–±–∞–∑–æ–≤—ã–µ –ø—Ä–µ–¥–º–µ—Ç—ã)
      const baseItems = caseItems.filter(item => (item.drop_after_cases || 1) === 1);
      
      if (baseItems.length > 0) {
        eligibleItems = baseItems;
        console.log('‚úÖ Found base items with drop_after_cases = 1:', baseItems.map(item => item.name));
      } else {
        // –ï—Å–ª–∏ –¥–∞–∂–µ –±–∞–∑–æ–≤—ã—Ö –ø—Ä–µ–¥–º–µ—Ç–æ–≤ –Ω–µ—Ç, –±–µ—Ä–µ–º –≤—Å–µ (fallback)
        console.log('‚ö†Ô∏è No base items found, using all case items as fallback');
        eligibleItems = caseItems;
      }
    }
    
    // –í—ã–±–∏—Ä–∞–µ–º —Å–ª—É—á–∞–π–Ω—ã–π –ø—Ä–µ–¥–º–µ—Ç –∏–∑ –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö
    const randomIndex = Math.floor(Math.random() * eligibleItems.length);
    const winner = eligibleItems[randomIndex];
    
    console.log('üéØ Selected winner:', { name: winner.name, rarity: winner.rarity, drop_after_cases: winner.drop_after_cases });
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–µ–∫—É—â–∏–π —Å—á–µ—Ç—á–∏–∫ (–ë–ï–ó –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è)
    setSpinCount(nextCaseNumber);
    
    // –û—Ç–ª–∞–¥–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
    console.log('Winner calculation result:', {
      currentCaseCount,
      nextCaseCount: nextCaseNumber,
      itemsByDropRate,
      eligibleItems: eligibleItems.map(item => ({ name: item.name, drop_after_cases: item.drop_after_cases })),
      winner: winner.name,
      winnerDropRate: winner.drop_after_cases
    });
    
    console.log('=== CALCULATE WINNER END ===');
    
    return winner;
  };

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∞–Ω–∏–º–∞—Ü–∏–∏ —Ä—É–ª–µ—Ç–∫–∏
  // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Ä–∞–Ω–¥–æ–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø—Ä–µ–¥–º–µ—Ç–æ–≤ —Ä—É–ª–µ—Ç–∫–∏
  const [rouletteItems, setRouletteItems] = useState<CaseItem[]>([]);

  // –°–æ–∑–¥–∞–µ–º —Ä–∞–Ω–¥–æ–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –º–∞—Å—Å–∏–≤ –ø—Ä–µ–¥–º–µ—Ç–æ–≤ –¥–ª—è —Ä—É–ª–µ—Ç–∫–∏
  const createRandomizedStrip = (winner: CaseItem) => {
    const BASE_ITEMS = 50; // –ë–∞–∑–æ–≤–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–µ–¥–º–µ—Ç–æ–≤
    const SPINS = 4; // –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª–Ω—ã—Ö –æ–±–æ—Ä–æ—Ç–æ–≤
    const TOTAL_ITEMS = BASE_ITEMS + (SPINS * caseItems.length); // –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–ª—è –∫—Ä–∞—Å–∏–≤–æ–π –∞–Ω–∏–º–∞—Ü–∏–∏
    
    const randomItems: CaseItem[] = [];
    
    // –ó–∞–ø–æ–ª–Ω—è–µ–º –º–∞—Å—Å–∏–≤ —Å–ª—É—á–∞–π–Ω—ã–º–∏ –ø—Ä–µ–¥–º–µ—Ç–∞–º–∏
    for (let i = 0; i < TOTAL_ITEMS; i++) {
      const randomItem = caseItems[Math.floor(Math.random() * caseItems.length)];
      randomItems.push(randomItem);
    }
    
    // –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –ø–æ–∑–∏—Ü–∏—é –¥–ª—è –ø–æ–±–µ–¥–Ω–æ–≥–æ –ø—Ä–µ–¥–º–µ—Ç–∞
    // –û–Ω –¥–æ–ª–∂–µ–Ω –æ–∫–∞–∑–∞—Ç—å—Å—è –≤ –∫–æ–Ω—Ü–µ –∞–Ω–∏–º–∞—Ü–∏–∏ –ø–æ–¥ —Ü–µ–Ω—Ç—Ä–∞–ª—å–Ω–æ–π –ª–∏–Ω–∏–µ–π
    const winnerPosition = BASE_ITEMS + Math.floor((SPINS * caseItems.length) / 2);
    randomItems[winnerPosition] = winner;
    
    console.log('Created strip:', {
      totalItems: TOTAL_ITEMS,
      winnerPosition,
      winnerName: winner.name,
      itemAtWinnerPosition: randomItems[winnerPosition].name
    });
    
    return { items: randomItems, winnerIndex: winnerPosition };
  };

  const spinToLocalIndex = (winner: CaseItem) => {
    if (!stripRef.current) return;
    
    const strip = stripRef.current;
    const viewport = strip.parentElement;
    
    if (!viewport) return;
    
    console.log('Starting smooth animation for winner:', winner.name);
    
    // –°–æ–∑–¥–∞–µ–º —Ä–∞–Ω–¥–æ–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—É—é –ª–µ–Ω—Ç—É —Å –ø–æ–±–µ–¥–Ω—ã–º –ø—Ä–µ–¥–º–µ—Ç–æ–º –≤ –Ω—É–∂–Ω–æ–π –ø–æ–∑–∏—Ü–∏–∏
    const stripData = createRandomizedStrip(winner);
    const randomizedItems = stripData.items;
    const actualWinnerIndex = stripData.winnerIndex;
    
    // –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ React –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–æ–≤—ã—Ö –ø—Ä–µ–¥–º–µ—Ç–æ–≤
    setRouletteItems(randomizedItems);
    
    // –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –∞–Ω–∏–º–∞—Ü–∏–∏ - —Ä–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º —Ä–µ–∞–ª—å–Ω—É—é —à–∏—Ä–∏–Ω—É —ç–ª–µ–º–µ–Ω—Ç–∞
    const isDesktop = window.innerWidth >= 640;
    const itemWidth = isDesktop ? 150 : 128; // 140px + 10px gap –Ω–∞ –¥–µ—Å–∫—Ç–æ–ø–µ, 120px + 8px gap –Ω–∞ –º–æ–±–∏–ª—å–Ω–æ–º
    const viewportWidth = viewport.clientWidth;
    const centerOffset = viewportWidth / 2 - itemWidth / 2;
    
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ñ–∞–∫—Ç–∏—á–µ—Å–∫–∏–π –∏–Ω–¥–µ–∫—Å –ø–æ–±–µ–¥–Ω–æ–≥–æ –ø—Ä–µ–¥–º–µ—Ç–∞ –∏–∑ —Å–æ–∑–¥–∞–Ω–Ω–æ–π –ª–µ–Ω—Ç—ã
    const winnerIndexInStrip = actualWinnerIndex;
    
    // –ù–∞—á–∞–ª—å–Ω–∞—è –ø–æ–∑–∏—Ü–∏—è - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –Ω–∞—á–∞–ª–æ –ª–µ–Ω—Ç—ã
    const startX = centerOffset;
    
    // –ö–æ–Ω–µ—á–Ω–∞—è –ø–æ–∑–∏—Ü–∏—è - –ø–æ–±–µ–¥–Ω—ã–π –ø—Ä–µ–¥–º–µ—Ç —Ç–æ—á–Ω–æ –≤ —Ü–µ–Ω—Ç—Ä–µ –∫—Ä–∞—Å–Ω–æ–π –ª–∏–Ω–∏–∏
    const targetX = -(winnerIndexInStrip * itemWidth) + centerOffset;
    
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–∞—á–∞–ª—å–Ω—É—é –ø–æ–∑–∏—Ü–∏—é
    strip.style.transform = `translate3d(${startX}px, 0, 0)`;
    
    console.log('Animation parameters:', {
      itemWidth,
      isDesktop,
      totalItems: randomizedItems.length,
      winnerIndexInStrip,
      startX,
      targetX,
      distance: targetX - startX,
      centerOffset,
      viewportWidth,
      winnerName: winner.name,
      itemAtIndex: randomizedItems[actualWinnerIndex]?.name
    });
    
    // –ì–ª–∞–¥–∫–∞—è –∞–Ω–∏–º–∞—Ü–∏—è —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º CSS transition
    setTimeout(() => {
      console.log('Starting CSS animation...');
      strip.style.transition = 'transform 5s cubic-bezier(0.23, 1, 0.32, 1)';
      strip.style.transform = `translate3d(${targetX}px, 0, 0)`;

      // –ñ–¥–µ–º –ü–û–õ–ù–û–ì–û –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è CSS –∞–Ω–∏–º–∞—Ü–∏–∏
      setTimeout(() => {
        console.log('CSS animation completed - 5 seconds passed');

        // –£–±–∏—Ä–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Å–ø–∏–Ω–∞ - —Ä—É–ª–µ—Ç–∫–∞ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞
        setIsSpinning(false);
        
        // –°–±—Ä–∞—Å—ã–≤–∞–µ–º transition –¥–ª—è —Å–ª–µ–¥—É—é—â–∏—Ö —Å–ø–∏–Ω–æ–≤
        strip.style.transition = '';

        console.log('Roulette is now completely stopped');

        // –ë–û–õ–¨–®–ê–Ø –∑–∞–¥–µ—Ä–∂–∫–∞ —á—Ç–æ–±—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–≤–∏–¥–µ–ª —á—Ç–æ —Ä—É–ª–µ—Ç–∫–∞ –æ—Å—Ç–∞–Ω–æ–≤–∏–ª–∞—Å—å
        setTimeout(() => {
          console.log('Now showing the result modal');
          
          // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∫–æ–π –ø—Ä–µ–¥–º–µ—Ç —Ä–µ–∞–ª—å–Ω–æ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ø–æ–¥ –∫—Ä–∞—Å–Ω–æ–π –ª–∏–Ω–∏–µ–π
          // –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –∏–Ω–¥–µ–∫—Å –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ñ–∏–Ω–∞–ª—å–Ω–æ–π –ø–æ–∑–∏—Ü–∏–∏
          const currentTransform = strip.style.transform;
          const translateX = parseFloat(currentTransform.match(/translate3d\(([^,]+)/)?.[1] || '0');
          const calculatedIndex = Math.round((-translateX + centerOffset) / itemWidth);
          
          console.log('Final position check:', {
            currentTransform,
            translateX,
            centerOffset,
            itemWidth,
            calculatedIndex,
            expectedIndex: actualWinnerIndex,
            itemAtCalculatedIndex: randomizedItems[calculatedIndex]?.name,
            itemAtExpectedIndex: randomizedItems[actualWinnerIndex]?.name
          });
          
          // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ä–∞—Å—Å—á–∏—Ç–∞–Ω–Ω—ã–π –∏–Ω–¥–µ–∫—Å –¥–ª—è –±–æ–ª–µ–µ —Ç–æ—á–Ω–æ–≥–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
          const finalIndex = calculatedIndex >= 0 && calculatedIndex < randomizedItems.length ? calculatedIndex : actualWinnerIndex;
          const actualWinnerItem = randomizedItems[finalIndex];
          
          console.log('Item under red line:', {
            finalIndex,
            name: actualWinnerItem.name,
            originalWinner: winner.name,
            match: actualWinnerItem.name === winner.name
          });
          
          // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Å –ø—Ä–µ–¥–º–µ—Ç–æ–º –∫–æ—Ç–æ—Ä—ã–π —Ä–µ–∞–ª—å–Ω–æ –ø–æ–¥ –∫—Ä–∞—Å–Ω–æ–π –ª–∏–Ω–∏–µ–π
          setShowResult(true);
          setWinnerItem(actualWinnerItem);

          // –ê–Ω–∏–º–∞—Ü–∏—è —è—Ä–∫–æ—Å—Ç–∏ viewport
          if (viewport) {
            viewport.animate([
              {filter:'brightness(1.0)'},
              {filter:'brightness(1.6)'},
              {filter:'brightness(1.0)'}
            ], {duration:500});
          }

          console.log('Result modal displayed with actual winner:', actualWinnerItem.name);
        }, 1000); // 1 —Å–µ–∫—É–Ω–¥–∞ –ø–æ—Å–ª–µ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ —Ä—É–ª–µ—Ç–∫–∏

        // –û—á–∏—â–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é
        if (animationRef.current) {
          cancelAnimationFrame(animationRef.current);
          animationRef.current = null;
        }

      }, 5000); // –¢–æ—á–Ω–æ 5 —Å–µ–∫—É–Ω–¥ - –≤—Ä–µ–º—è CSS –∞–Ω–∏–º–∞—Ü–∏–∏

    }, 200); // –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –Ω–∞—á–∞–ª—å–Ω–æ–π –ø–æ–∑–∏—Ü–∏–∏
  };

  const startSpin = async () => {
    console.log('=== START SPIN START ===');
    console.log('isSpinning state:', isSpinning);
    console.log('showResult state:', showResult);
    console.log('animationRef.current:', animationRef.current);
    
    // –ü–û–õ–ù–ê–Ø –û–ß–ò–°–¢–ö–ê –ê–ù–ò–ú–ê–¶–ò–ò –ü–ï–†–ï–î –ù–û–í–´–ú –ó–ê–ü–£–°–ö–û–ú
    if (animationRef.current) {
      console.log('Cancelling previous animation before new spin');
      cancelAnimationFrame(animationRef.current);
      animationRef.current = null;
    }
    
    // –°–ë–†–ê–°–´–í–ê–ï–ú –°–û–°–¢–û–Ø–ù–ò–Ø –ü–†–ò –ö–ê–ñ–î–û–ú –ù–û–í–û–ú –ó–ê–ü–£–°–ö–ï
    if (showResult) {
      console.log('Resetting states for new spin...');
      setShowResult(false);
      setWinnerItem(null);
      setSoldOrAdded(false); // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–∏ –Ω–æ–≤–æ–º –æ—Ç–∫—Ä—ã—Ç–∏–∏
    }
    
    if (isSpinning) {
      console.log('Already spinning, returning early');
      return;
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –µ—Å—Ç—å –ø—Ä–µ–¥–º–µ—Ç—ã –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è
    if (caseItems.length === 0) {
      console.error('No case items available for spinning');
      showError('–ù–µ—Ç –ø—Ä–µ–¥–º–µ—Ç–æ–≤ –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è –≤ —ç—Ç–æ–º –∫–µ–π—Å–µ');
      return;
    }

    try {
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–ª–∞–Ω—Å –∏ —Å–ø–∏—Å—ã–≤–∞–µ–º —Å—Ç–æ–∏–º–æ—Å—Ç—å –∫–µ–π—Å–∞
      console.log('üí∞ –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–ª–∞–Ω—Å –∏ —Å–ø–∏—Å—ã–≤–∞–µ–º —Å—Ç–æ–∏–º–æ—Å—Ç—å –∫–µ–π—Å–∞:', casePrice);
      
      if (!profile?.telegram_id) {
        showError('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω');
        return;
      }

      // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å
      const { data: currentProfile, error: fetchBalanceError } = await supabase
        .from('profiles')
        .select('balance')
        .eq('telegram_id', profile.telegram_id)
        .single();

      if (fetchBalanceError || !currentProfile) {
        console.error('‚ùå Error fetching current balance:', fetchBalanceError);
        showError('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –±–∞–ª–∞–Ω—Å–∞');
        return;
      }

      const currentBalance = currentProfile.balance || 0;
      console.log('üí∞ –¢–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å:', currentBalance, '–°—Ç–æ–∏–º–æ—Å—Ç—å –∫–µ–π—Å–∞:', casePrice);

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ª–∏ —Å—Ä–µ–¥—Å—Ç–≤
      if (currentBalance < casePrice) {
        showError(`–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤! –ù—É–∂–Ω–æ: ${casePrice}‚Ç¥, –¥–æ—Å—Ç—É–ø–Ω–æ: ${currentBalance}‚Ç¥`);
        return;
      }

      // –°–ø–∏—Å—ã–≤–∞–µ–º —Å—Ç–æ–∏–º–æ—Å—Ç—å –∫–µ–π—Å–∞
      const newBalance = currentBalance - casePrice;
      const { error: balanceError } = await supabase
        .from('profiles')
        .update({ 
          balance: newBalance,
          updated_at: new Date().toISOString()
        })
        .eq('telegram_id', profile.telegram_id);

      if (balanceError) {
        console.error('‚ùå Error updating balance:', balanceError);
        showError('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–ø–∏—Å–∞–Ω–∏–∏ —Å—Ä–µ–¥—Å—Ç–≤');
        return;
      }

      console.log('‚úÖ –°—Ä–µ–¥—Å—Ç–≤–∞ —É—Å–ø–µ—à–Ω–æ —Å–ø–∏—Å–∞–Ω—ã. –ù–æ–≤—ã–π –±–∞–ª–∞–Ω—Å:', newBalance);
      
      // –°–æ–∑–¥–∞–µ–º —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é —Å–ø–∏—Å–∞–Ω–∏—è
      try {
        const { error: transactionError } = await supabase
          .from('transactions')
          .insert({
            user_id: profile.telegram_id,
            type: 'case_opening',
            amount: -casePrice,
            description: `–û—Ç–∫—Ä—ã—Ç–∏–µ –∫–µ–π—Å–∞ "${caseName}"`,
            created_at: new Date().toISOString()
          });

        if (transactionError) {
          console.error('‚ùå Error creating transaction:', transactionError);
          // –ù–µ –ø—Ä–µ—Ä—ã–≤–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å, –µ—Å–ª–∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è –Ω–µ —Å–æ–∑–¥–∞–ª–∞—Å—å
        } else {
          console.log('‚úÖ –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∞');
        }
      } catch (error) {
        console.error('‚ùå Failed to create transaction:', error);
      }

      showInfo(`–°–ø–∏—Å–∞–Ω–æ ${casePrice}‚Ç¥ –∑–∞ –æ—Ç–∫—Ä—ã—Ç–∏–µ –∫–µ–π—Å–∞`);
      
      // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Ç—Ä–∞—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–∫–µ–π—Å—ã —Å—á–∏—Ç–∞—é—Ç—Å—è –∫–∞–∫ –ø–æ–∫—É–ø–∫–∏)
      try {
        const { error: statsError } = await supabase.rpc('update_user_purchase_stats', {
          user_telegram_id: profile.telegram_id,
          order_amount: casePrice
        });

        if (statsError) {
          console.error('‚ùå Error updating user purchase stats:', statsError);
        } else {
          console.log('‚úÖ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ç—Ä–∞—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∞');
        }
      } catch (error) {
        console.error('‚ùå Failed to update user purchase stats:', error);
      }

      // –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–æ—Ñ–∏–ª—å –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ
      await refreshProfile();

      // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–π —Å—á–µ—Ç—á–∏–∫ –æ—Ç–∫—Ä—ã—Ç—ã—Ö –∫–µ–π—Å–æ–≤
      console.log('–£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–π —Å—á–µ—Ç—á–∏–∫ –∫–µ–π—Å–æ–≤...');
      const success = await incrementGlobalCounter();
      
      if (!success) {
        console.warn('–ù–µ —É–¥–∞–ª–æ—Å—å —É–≤–µ–ª–∏—á–∏—Ç—å –≥–ª–æ–±–∞–ª—å–Ω—ã–π —Å—á–µ—Ç—á–∏–∫, –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º —Å —Ç–µ–∫—É—â–∏–º –∑–Ω–∞—á–µ–Ω–∏–µ–º');
      } else {
        console.log('‚úÖ –ì–ª–æ–±–∞–ª—å–Ω—ã–π —Å—á–µ—Ç—á–∏–∫ —É—Å–ø–µ—à–Ω–æ —É–≤–µ–ª–∏—á–µ–Ω');
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –æ—Ç–∫—Ä—ã—Ç—ã—Ö –∫–µ–π—Å–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        if (profile?.telegram_id) {
          try {
            console.log('üîÑ –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∫–µ–π—Å–æ–≤ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', profile.telegram_id);
            
            const { error: statsError } = await supabase.rpc('increment_user_cases_opened', {
              user_telegram_id: profile.telegram_id
            });

            if (statsError) {
              console.error('‚ùå Error updating user cases statistics:', statsError);
            } else {
              console.log('‚úÖ –ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∫–µ–π—Å–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∞');
              // –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–æ—Ñ–∏–ª—å –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ
              await refreshProfile();
            }
          } catch (error) {
            console.error('‚ùå Failed to update user cases statistics:', error);
          }
        }
      }

      // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø–æ–±–µ–¥–Ω—ã–π –ø—Ä–µ–¥–º–µ—Ç
      const winner = calculateWinner();
      console.log('Winner calculated:', winner.name);
      
      // –ó–∞–ø—É—Å–∫–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é
      if (stripRef.current) {
        spinToLocalIndex(winner);
        setIsSpinning(true);
        console.log('=== START SPIN END ===');
      } else {
        console.error('Strip element not found!');
      }
    } catch (err) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ —Å–ø–∏–Ω–∞:', err);
      showError('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ –∫–µ–π—Å–∞');
    }
  };

  const getRarityColor = (rarity: string) => {
    switch (rarity.toLowerCase()) {
      case 'common': return 'r-common';
      case 'rare': return 'r-rare';
      case 'epic': return 'r-epic';
      case 'legendary': return 'r-legend';
      default: return 'r-common';
    }
  };

  const getRarityName = (rarity: string) => {
    switch (rarity.toLowerCase()) {
      case 'common': return '–û–±—ã—á–Ω—ã–π';
      case 'rare': return '–†–µ–¥–∫–∏–π';
      case 'epic': return '–≠–ø–∏—á–µ—Å–∫–∏–π';
      case 'legendary': return '–õ–µ–≥–µ–Ω–¥–∞—Ä–Ω—ã–π';
      default: return '–û–±—ã—á–Ω—ã–π';
    }
  };

  const getRarityTag = (rarity: string) => {
    switch (rarity.toLowerCase()) {
      case 'common': return 'common';
      case 'rare': return 'rare';
      case 'epic': return 'epic';
      case 'legendary': return 'legend';
      default: return 'common';
    }
  };

  return (
    <>
      <style>{`
        .r-common {
          background: #1f1f1f !important;
          color: #d3d3d3 !important;
          border: 1px solid #333 !important;
        }
        .r-rare {
          background: #2a1d0f !important;
          color: #f0d59f !important;
          border: 1px solid #7d520e !important;
        }
        .r-epic {
          background: #33210f !important;
          color: #ffe5a3 !important;
          border: 1px solid #aa7c2f !important;
        }
        .r-legend {
          background: #3d2a0e !important;
          color: #fff4c3 !important;
          border: 1px solid #d4af37 !important;
        }
        .w-35 {
          width: 120px !important;
        }
        @media (min-width: 640px) {
          .w-35 {
            width: 140px !important;
          }
        }
        .h-30 {
          height: 100px !important;
        }
        @media (min-width: 640px) {
          .h-30 {
            height: 120px !important;
          }
        }
        .gap-2\.5 {
          gap: 8px !important;
        }
        @media (min-width: 640px) {
          .gap-2\.5 {
            gap: 10px !important;
          }
        }
        .p-2\.5 {
          padding: 8px !important;
        }
        @media (min-width: 640px) {
          .p-2\.5 {
            padding: 10px !important;
          }
        }
        .mix-blend-mode-overlay {
          mix-blend-mode: overlay !important;
        }
        .filter-blur-sm {
          filter: blur(0.3px) !important;
        }
        .opacity-35 {
          opacity: 0.35 !important;
        }
        ${notificationStyles}
      `}</style>
      
      <div className="fixed inset-0 bg-black/90 backdrop-blur-xl z-50 flex items-center justify-center p-2 sm:p-4">
        <div className="bg-gray-900/95 rounded-2xl sm:rounded-3xl border-2 border-amber-500/50 shadow-2xl shadow-amber-500/30 max-w-4xl sm:max-w-6xl w-full max-h-[95vh] sm:max-h-[90vh] overflow-hidden">
          {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
          <div className="bg-gradient-to-r from-amber-500/20 to-yellow-500/20 p-4 sm:p-6 border-b border-amber-500/30">
            <div className="flex items-center justify-between">
              <h2 className="text-xl sm:text-2xl md:text-3xl font-bold text-white flex items-center">
                <Package className="w-6 h-6 sm:w-7 sm:h-7 md:w-8 md:h-8 mr-2 sm:mr-3 text-amber-400" />
                –û—Ç–∫—Ä—ã—Ç–∏–µ –∫–µ–π—Å–∞
              </h2>
              <Button
                onClick={() => {
                  console.log('Close button clicked!');
                  console.log('Current state - isSpinning:', isSpinning, 'showResult:', showResult);
                  handleClose();
                }}
                variant="ghost"
                size="sm"
                disabled={isSpinning}
                className={`${
                  isSpinning 
                    ? 'text-gray-600 cursor-not-allowed' 
                    : 'text-gray-400 hover:text-white hover:bg-white/10'
                }`}
              >
                <X className="w-5 h-5 sm:w-6 sm:h-6" />
              </Button>
            </div>
            <p className="text-gray-300 mt-2 text-sm sm:text-base">–°—Ç–æ–∏–º–æ—Å—Ç—å: {casePrice}‚Ç¥</p>
          </div>

          {/* –†—É–ª–µ—Ç–∫–∞ */}
          <div className="p-4 sm:p-6 md:p-8">
            
            {/* –ö–Ω–æ–ø–∫–∞ –∑–∞–ø—É—Å–∫–∞ —Ä—É–ª–µ—Ç–∫–∏ */}
            {!showResult ? (
              <div className="space-y-6 sm:space-y-8">
                {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
                <div className="text-center">
                  <h2 className="text-2xl sm:text-3xl font-bold text-white mb-2">
                    –û—Ç–∫—Ä—ã—Ç–∏–µ –∫–µ–π—Å–∞
                  </h2>
                  <p className="text-gray-400 text-sm sm:text-base">
                    –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –æ—Ç–∫—Ä—ã—Ç—å –∫–µ–π—Å –∏ –ø–æ–ª—É—á–∏—Ç—å —Å–ª—É—á–∞–π–Ω—ã–π –ø—Ä–µ–¥–º–µ—Ç
                  </p>
                </div>
                
                {/* –ö–Ω–æ–ø–∫–∞ –∑–∞–ø—É—Å–∫–∞ */}
                <div className="text-center">
                  <Button
                    onClick={startSpin}
                    disabled={isSpinning}
                    className="bg-gradient-to-r from-amber-500 to-yellow-500 hover:from-amber-600 hover:to-yellow-600 text-black font-bold text-lg sm:text-xl px-8 sm:px-12 py-4 sm:py-6 rounded-xl transition-all duration-300 hover:scale-105 shadow-xl shadow-amber-500/30 disabled:opacity-50 disabled:cursor-not-allowed"
                  >
                    {isSpinning ? (
                      <>
                        <div className="animate-spin rounded-full h-6 w-6 border-b-2 border-black mr-3"></div>
                        –û—Ç–∫—Ä—ã—Ç–∏–µ...
                      </>
                    ) : (
                      <>
                        <Package className="w-6 h-6 sm:w-8 sm:h-8 mr-3" />
                        –û—Ç–∫—Ä—ã—Ç—å –∫–µ–π—Å
                      </>
                    )}
                  </Button>
                </div>

                {/* –†—É–ª–µ—Ç–∫–∞ */}
                <div className="relative">
                  {/* –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä —Ä—É–ª–µ—Ç–∫–∏ */}
                  <div className="relative h-36 sm:h-40 md:h-44 bg-gradient-to-br from-gray-900/90 to-gray-800/80 rounded-2xl border-2 border-amber-500/50 overflow-hidden shadow-2xl shadow-amber-500/20 backdrop-blur-xl">
                    {/* –ê–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ñ–æ–Ω */}
                    <div className="absolute inset-0 bg-gradient-to-r from-amber-500/5 via-yellow-500/10 to-amber-500/5 opacity-50" style={{
                      backgroundSize: '200% 100%',
                      animation: 'gradient-shift 3s ease-in-out infinite'
                    }}></div>
                    
                    {/* –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω–∞—è –ª–∏–Ω–∏—è —Å –∞–Ω–∏–º–∞—Ü–∏–µ–π */}
                    <div className={`absolute left-1/2 top-0 bottom-0 w-1 sm:w-1.5 bg-gradient-to-b from-amber-300 via-yellow-400 to-amber-300 transform -translate-x-1/2 z-20 shadow-2xl shadow-amber-400/80 rounded-full ${
                      isSpinning ? 'animate-pulse' : ''
                    }`}>
                      {/* –°–≤–µ—Ç—è—â–∏–µ—Å—è —Ç–æ—á–∫–∏ */}
                      <div className="absolute -top-2 -left-1.5 w-4 h-4 bg-amber-400 rounded-full opacity-80 animate-ping shadow-lg shadow-amber-400/60"></div>
                      <div className="absolute -bottom-2 -left-1.5 w-4 h-4 bg-amber-400 rounded-full opacity-80 animate-ping shadow-lg shadow-amber-400/60" style={{ animationDelay: '0.5s' }}></div>
                      
                      {/* –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä */}
                      <div className="absolute top-1/2 -left-2 w-5 h-5 bg-gradient-to-r from-amber-400 to-yellow-500 rounded-full transform -translate-y-1/2 animate-pulse shadow-xl shadow-amber-400/80 border-2 border-white/20"></div>
                    </div>
                    
                    {/* –õ–µ–Ω—Ç–∞ —Å –ø—Ä–µ–¥–º–µ—Ç–∞–º–∏ */}
                    <div 
                      ref={stripRef}
                      className="flex gap-2.5 items-center p-3 sm:p-4 h-full"
                      style={{ transform: 'translateX(0px)' }}
                    >
                      {/* –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–∞–Ω–¥–æ–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø—Ä–µ–¥–º–µ—Ç—ã –ø—Ä–∏ —Å–ø–∏–Ω–µ –∏–ª–∏ –ø—Ä–µ–≤—å—é */}
                      {(isSpinning ? rouletteItems : caseItems).map((item, index) => (
                        <div
                          key={`${isSpinning ? 'roulette' : 'preview'}-${item.id}-${index}`}
                          className={`flex-shrink-0 w-35 h-30 rounded-lg sm:rounded-xl p-2 flex flex-col relative isolation isolate item ${
                            getRarityColor(item.rarity)
                          } overflow-hidden group`}
                        >
                          {/* –ë–ª–µ—Å–∫ */}
                          <div className="absolute inset-0 rounded-lg sm:rounded-xl bg-gradient-to-br from-white/20 to-transparent opacity-60"></div>
                          {/* –°–≤–µ—á–µ–Ω–∏–µ */}
                          <div className="absolute -inset-1 rounded-lg sm:rounded-xl opacity-30 blur-sm" style={{ 
                            background: item.rarity.toLowerCase() === 'legendary' ? 'linear-gradient(45deg, #FFD700, #FFA500)' :
                                      item.rarity.toLowerCase() === 'epic' ? 'linear-gradient(45deg, #9B59B6, #8E44AD)' :
                                      item.rarity.toLowerCase() === 'rare' ? 'linear-gradient(45deg, #3498DB, #2980B9)' :
                                      'linear-gradient(45deg, #95A5A6, #7F8C8D)'
                          }}></div>
                          
                          {/* –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø—Ä–µ–¥–º–µ—Ç–∞ */}
                          <div className="flex-1 flex items-center justify-center relative z-10 mb-1">
                            {item.image_url ? (
                              <img
                                src={item.image_url}
                                alt={item.name}
                                className="w-16 h-16 sm:w-20 sm:h-20 object-contain rounded-md group-hover:scale-110 transition-transform duration-300"
                              />
                            ) : (
                              <div className="w-16 h-16 sm:w-20 sm:h-20 bg-gray-700/50 rounded-md flex items-center justify-center">
                                <Gift className="w-8 h-8 sm:w-10 sm:h-10 text-gray-400" />
                              </div>
                            )}
                          </div>
                          
                          {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–µ–¥–º–µ—Ç–µ */}
                          <div className="relative z-10 text-center">
                            {/* –ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–µ–¥–º–µ—Ç–∞ */}
                            <div className="font-bold text-xs leading-tight mb-1 line-clamp-2">
                              {item.name}
                            </div>
                            
                            {/* –¢–µ–≥ —Ä–µ–¥–∫–æ—Å—Ç–∏ */}
                            <div className="opacity-80 text-xs uppercase font-bold">
                              {getRarityTag(item.rarity)}
                            </div>
                          </div>
                        </div>
                      ))}
                    </div>
                  </div>
                  
                  {/* –ü–æ–¥—Å–∫–∞–∑–∫–∞ –∏ —Å—á–µ—Ç—á–∏–∫ */}
                  <div className="text-center mt-3 sm:mt-4">
                    {isSpinning ? (
                      <div className="space-y-2">
                        <p className="text-amber-400 text-xs sm:text-sm font-medium">üé∞ –†—É–ª–µ—Ç–∫–∞ –∫—Ä—É—Ç–∏—Ç—Å—è...</p>
                        <div className="flex items-center justify-center space-x-2">
                          <div className="w-1.5 h-1.5 sm:w-2 sm:h-2 bg-amber-400 rounded-full animate-bounce"></div>
                          <div className="w-1.5 h-1.5 sm:w-2 sm:h-2 bg-amber-400 rounded-full animate-bounce" style={{ animationDelay: '0.1s' }}></div>
                          <div className="w-1.5 h-1.5 sm:w-2 sm:h-2 bg-amber-400 rounded-full animate-bounce" style={{ animationDelay: '0.2s' }}></div>
                        </div>
                      </div>
                    ) : (
                      <p className="text-gray-400 text-xs sm:text-sm">–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É, —á—Ç–æ–±—ã –∑–∞–ø—É—Å—Ç–∏—Ç—å —Ä—É–ª–µ—Ç–∫—É</p>
                    )}
                  </div>
                </div>
              </div>
            ) : (
              /* –†–µ–∑—É–ª—å—Ç–∞—Ç */
              <div className="text-center space-y-4 sm:space-y-6 relative">
                {/* –§–æ–Ω–æ–≤—ã–µ –∞–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —á–∞—Å—Ç–∏—Ü—ã */}
                <div className="absolute inset-0 overflow-hidden pointer-events-none">
                  {Array.from({ length: 20 }).map((_, i) => (
                    <div
                      key={i}
                      className="absolute w-2 h-2 bg-gradient-to-r from-yellow-400 to-amber-500 rounded-full opacity-60 animate-ping"
                      style={{
                        left: `${Math.random() * 100}%`,
                        top: `${Math.random() * 100}%`,
                        animationDelay: `${Math.random() * 3}s`,
                        animationDuration: `${2 + Math.random() * 2}s`
                      }}
                    />
                  ))}
                </div>
                
                {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å –∞–Ω–∏–º–∞—Ü–∏–µ–π */}
                <div className="relative z-10">
                  <div className="text-6xl sm:text-7xl md:text-8xl mb-4 sm:mb-6 animate-bounce">üéâ</div>
                  
                  <h3 className="text-3xl sm:text-4xl font-black text-transparent bg-clip-text bg-gradient-to-r from-yellow-400 via-amber-500 to-orange-500 mb-3 sm:mb-4 animate-pulse">
                    –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º!
                  </h3>
                </div>
                
                {winnerItem && (
                  <div className="relative z-10 bg-gradient-to-br from-gray-900/90 via-gray-800/80 to-gray-900/90 rounded-2xl sm:rounded-3xl p-6 sm:p-8 border-2 shadow-2xl backdrop-blur-xl overflow-hidden" style={{
                    borderColor: winnerItem.rarity.toLowerCase() === 'legendary' ? '#FFD700' :
                                winnerItem.rarity.toLowerCase() === 'epic' ? '#9B59B6' :
                                winnerItem.rarity.toLowerCase() === 'rare' ? '#3498DB' :
                                '#95A5A6',
                    boxShadow: `0 0 60px ${
                      winnerItem.rarity.toLowerCase() === 'legendary' ? '#FFD700' :
                      winnerItem.rarity.toLowerCase() === 'epic' ? '#9B59B6' :
                      winnerItem.rarity.toLowerCase() === 'rare' ? '#3498DB' :
                      '#95A5A6'
                    }40`
                  }}>
                    {/* –ê–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ñ–æ–Ω */}
                    <div className="absolute inset-0 opacity-10" style={{
                      background: `linear-gradient(45deg, ${
                        winnerItem.rarity.toLowerCase() === 'legendary' ? '#FFD700, #FFA500' :
                        winnerItem.rarity.toLowerCase() === 'epic' ? '#9B59B6, #8E44AD' :
                        winnerItem.rarity.toLowerCase() === 'rare' ? '#3498DB, #2980B9' :
                        '#95A5A6, #7F8C8D'
                      })`,
                      backgroundSize: '400% 400%',
                      animation: 'gradient-shift 4s ease-in-out infinite'
                    }}></div>
                    
                    {/* –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø—Ä–µ–¥–º–µ—Ç–∞ —Å —ç—Ñ—Ñ–µ–∫—Ç–∞–º–∏ */}
                    <div className="relative mb-6">
                      <div className="w-32 h-32 sm:w-36 sm:h-36 md:w-40 md:h-40 mx-auto relative">
                        {/* –°–≤–µ—Ç—è—â–∏–π—Å—è —Ñ–æ–Ω */}
                        <div className="absolute inset-0 rounded-2xl opacity-30 blur-xl animate-pulse" style={{
                          background: `radial-gradient(circle, ${
                            winnerItem.rarity.toLowerCase() === 'legendary' ? '#FFD700' :
                            winnerItem.rarity.toLowerCase() === 'epic' ? '#9B59B6' :
                            winnerItem.rarity.toLowerCase() === 'rare' ? '#3498DB' :
                            '#95A5A6'
                          }, transparent)`
                        }}></div>
                        
                        {/* –í—Ä–∞—â–∞—é—â–µ–µ—Å—è –∫–æ–ª—å—Ü–æ */}
                        <div className="absolute inset-0 border-4 border-transparent rounded-2xl animate-spin" style={{
                          borderTopColor: winnerItem.rarity.toLowerCase() === 'legendary' ? '#FFD700' :
                                        winnerItem.rarity.toLowerCase() === 'epic' ? '#9B59B6' :
                                        winnerItem.rarity.toLowerCase() === 'rare' ? '#3498DB' :
                                        '#95A5A6',
                          animationDuration: '3s'
                        }}></div>
                        
                        {/* –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ */}
                        <div className="relative z-10 w-full h-full bg-gray-800/60 rounded-2xl border-2 flex items-center justify-center backdrop-blur-sm" style={{
                          borderColor: winnerItem.rarity.toLowerCase() === 'legendary' ? '#FFD700' :
                                      winnerItem.rarity.toLowerCase() === 'epic' ? '#9B59B6' :
                                      winnerItem.rarity.toLowerCase() === 'rare' ? '#3498DB' :
                                      '#95A5A6'
                        }}>
                          {winnerItem.image_url ? (
                            <img
                              src={winnerItem.image_url}
                              alt={winnerItem.name}
                              className="w-24 h-24 sm:w-28 sm:h-28 md:w-32 md:h-32 object-contain rounded-xl animate-pulse"
                            />
                          ) : (
                            <Gift className="w-16 h-16 sm:w-20 sm:h-20 md:w-24 md:h-24 text-amber-400 animate-bounce" />
                          )}
                        </div>
                      </div>
                    </div>
                    
                    {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–µ–¥–º–µ—Ç–µ */}
                    <div className="relative z-10 space-y-4">
                      <h4 className="text-2xl sm:text-3xl font-black text-white drop-shadow-lg">
                        {winnerItem.name}
                      </h4>
                      
                      {/* –¶–µ–Ω–∞ —Å –∞–Ω–∏–º–∞—Ü–∏–µ–π */}
                      <div className="text-2xl sm:text-3xl font-black text-transparent bg-clip-text bg-gradient-to-r from-green-400 to-emerald-500 animate-pulse">
                        {winnerItem.price || 0}‚Ç¥
                      </div>
                      
                      {/* –ó–Ω–∞—á–æ–∫ —Ä–µ–¥–∫–æ—Å—Ç–∏ */}
                      <div className={`inline-flex items-center px-4 py-2 rounded-full text-sm font-black uppercase tracking-wider shadow-lg animate-bounce ${
                        winnerItem.rarity.toLowerCase() === 'legendary' ? 'bg-gradient-to-r from-yellow-400 to-yellow-600 text-black shadow-yellow-500/50' :
                        winnerItem.rarity.toLowerCase() === 'epic' ? 'bg-gradient-to-r from-purple-500 to-purple-700 text-white shadow-purple-500/50' :
                        winnerItem.rarity.toLowerCase() === 'rare' ? 'bg-gradient-to-r from-blue-500 to-blue-700 text-white shadow-blue-500/50' :
                        'bg-gradient-to-r from-gray-500 to-gray-700 text-white shadow-gray-500/50'
                      }`}>
                        ‚ú® {getRarityName(winnerItem.rarity)}
                      </div>
                      
                      <p className="text-gray-300 text-base sm:text-lg font-medium">
                        –ü—Ä–µ–¥–º–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω –≤ –≤–∞—à –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å!
                      </p>
                    </div>
                  </div>
                )}
                
                {/* –ö–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π */}
                <div className="relative z-10 flex flex-col sm:flex-row justify-center gap-4 sm:gap-6 mb-4">
                  <Button
                    onClick={async () => {
                      if (winnerItem && !soldOrAdded) {
                        console.log('üíµ –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–µ–¥–º–µ—Ç –≤ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å:', winnerItem.name);
                        
                        // –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–µ–¥–º–µ—Ç –≤ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å —á–µ—Ä–µ–∑ callback
                        onCaseOpened(winnerItem, 'add');
                        
                        // –û—Ç–º–µ—á–∞–µ–º, —á—Ç–æ –ø—Ä–µ–¥–º–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω
                        setSoldOrAdded(true);
                        
                        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
                        showSuccess(`–ü—Ä–µ–¥–º–µ—Ç "${winnerItem.name}" –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å!`);
                        
                        // –ó–∞–∫—Ä—ã–≤–∞–µ–º –æ–∫–Ω–æ —á–µ—Ä–µ–∑ –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ –≤—Ä–µ–º—è
                        setTimeout(() => {
                          handleClose();
                        }, 2000);
                      }
                    }}
                    disabled={soldOrAdded}
                    className="group relative overflow-hidden bg-gradient-to-r from-green-500 via-green-600 to-emerald-600 hover:from-green-600 hover:via-green-700 hover:to-emerald-700 text-white px-8 py-4 text-base font-bold rounded-2xl transition-all duration-500 hover:scale-110 hover:rotate-1 disabled:opacity-50 disabled:cursor-not-allowed shadow-2xl shadow-green-500/40 hover:shadow-green-500/60 border border-green-400/30"
                  >
                    {/* –ê–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ñ–æ–Ω */}
                    <div className="absolute inset-0 bg-gradient-to-r from-green-400/20 to-emerald-400/20 opacity-0 group-hover:opacity-100 transition-opacity duration-500"></div>
                    
                    {/* –ë–ª–µ—Å–∫ */}
                    <div className="absolute inset-0 bg-gradient-to-r from-transparent via-white/20 to-transparent -skew-x-12 -translate-x-full group-hover:translate-x-full transition-transform duration-1000"></div>
                    
                    <div className="relative z-10 flex items-center justify-center">
                      <Package className="w-5 h-5 mr-3 group-hover:animate-bounce" />
                      –î–æ–±–∞–≤–∏—Ç—å –≤ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å
                    </div>
                  </Button>
                  
                  <Button
                    onClick={async () => {
                      if (winnerItem && !soldOrAdded) {
                        console.log('üîÑ –ù–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ "–ü—Ä–æ–¥–∞—Ç—å" –¥–ª—è –ø—Ä–µ–¥–º–µ—Ç–∞:', winnerItem);
                        
                        // –ü—Ä–æ–¥–∞–µ–º –ø—Ä–µ–¥–º–µ—Ç —Å—Ä–∞–∑—É (–±–µ–∑ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å)
                        await handleImmediateSell(winnerItem);
                        
                        // –û—Ç–º–µ—á–∞–µ–º, —á—Ç–æ –ø—Ä–µ–¥–º–µ—Ç –ø—Ä–æ–¥–∞–Ω
                        setSoldOrAdded(true);
                      }
                    }}
                    disabled={soldOrAdded}
                    className="group relative overflow-hidden bg-gradient-to-r from-red-500 via-red-600 to-pink-600 hover:from-red-600 hover:via-red-700 hover:to-pink-700 text-white px-8 py-4 text-base font-bold rounded-2xl transition-all duration-500 hover:scale-110 hover:-rotate-1 disabled:opacity-50 disabled:cursor-not-allowed shadow-2xl shadow-red-500/40 hover:shadow-red-500/60 border border-red-400/30"
                  >
                    {/* –ê–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ñ–æ–Ω */}
                    <div className="absolute inset-0 bg-gradient-to-r from-red-400/20 to-pink-400/20 opacity-0 group-hover:opacity-100 transition-opacity duration-500"></div>
                    
                    {/* –ë–ª–µ—Å–∫ */}
                    <div className="absolute inset-0 bg-gradient-to-r from-transparent via-white/20 to-transparent -skew-x-12 -translate-x-full group-hover:translate-x-full transition-transform duration-1000"></div>
                    
                    <div className="relative z-10 flex items-center justify-center">
                      <DollarSign className="w-5 h-5 mr-3 group-hover:animate-spin" />
                      –ü—Ä–æ–¥–∞—Ç—å
                    </div>
                  </Button>
                </div>
                
                {/* –£–±–∏—Ä–∞–µ–º –∫–Ω–æ–ø–∫—É "–ó–∞–∫—Ä—ã—Ç—å" - –æ–∫–Ω–æ –∑–∞–∫—Ä—ã–≤–∞–µ—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–æ—Å–ª–µ –¥–µ–π—Å—Ç–≤–∏—è */}
              </div>
            )}
          </div>
        </div>
      </div>
      
      {/* –ö—Ä–∞—Å–∏–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ */}
      <Notification
        show={notification.show}
        message={notification.message}
        type={notification.type}
        onClose={hideNotification}
        autoHide={notification.autoHide}
        duration={notification.duration}
      />

      {/* –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –ø—Ä–æ–¥–∞–∂–∏ */}
      {/* –£–¥–∞–ª–µ–Ω–æ */}
      
      {/* CSS —Å—Ç–∏–ª–∏ –¥–ª—è –∞–Ω–∏–º–∞—Ü–∏–π */}
      <style>{`
        @keyframes slideInFromRight {
          from {
            transform: translateX(100%);
            opacity: 0;
          }
          to {
            transform: translateX(0);
            opacity: 1;
          }
        }
        
        .animate-in.slide-in-from-right-2 {
          animation: slideInFromRight 0.3s ease-out;
        }
      `}</style>
    </>
  );
};

export default CaseRoulette;
